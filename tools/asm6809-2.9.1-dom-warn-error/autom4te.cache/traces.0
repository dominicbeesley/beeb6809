m4trace:aclocal.m4:1607: -1- m4_include([m4/00gnulib.m4])
m4trace:aclocal.m4:1608: -1- m4_include([m4/absolute-header.m4])
m4trace:aclocal.m4:1609: -1- m4_include([m4/alloca.m4])
m4trace:aclocal.m4:1610: -1- m4_include([m4/dirname.m4])
m4trace:aclocal.m4:1611: -1- m4_include([m4/double-slash-root.m4])
m4trace:aclocal.m4:1612: -1- m4_include([m4/errno_h.m4])
m4trace:aclocal.m4:1613: -1- m4_include([m4/error.m4])
m4trace:aclocal.m4:1614: -1- m4_include([m4/exponentd.m4])
m4trace:aclocal.m4:1615: -1- m4_include([m4/extensions.m4])
m4trace:aclocal.m4:1616: -1- m4_include([m4/extern-inline.m4])
m4trace:aclocal.m4:1617: -1- m4_include([m4/float_h.m4])
m4trace:aclocal.m4:1618: -1- m4_include([m4/getopt.m4])
m4trace:aclocal.m4:1619: -1- m4_include([m4/getprogname.m4])
m4trace:aclocal.m4:1620: -1- m4_include([m4/gnulib-common.m4])
m4trace:aclocal.m4:1621: -1- m4_include([m4/gnulib-comp.m4])
m4trace:aclocal.m4:1622: -1- m4_include([m4/include_next.m4])
m4trace:aclocal.m4:1623: -1- m4_include([m4/intmax_t.m4])
m4trace:aclocal.m4:1624: -1- m4_include([m4/inttypes_h.m4])
m4trace:aclocal.m4:1625: -1- m4_include([m4/limits-h.m4])
m4trace:aclocal.m4:1626: -1- m4_include([m4/longlong.m4])
m4trace:aclocal.m4:1627: -1- m4_include([m4/malloc.m4])
m4trace:aclocal.m4:1628: -1- m4_include([m4/memchr.m4])
m4trace:aclocal.m4:1629: -1- m4_include([m4/mmap-anon.m4])
m4trace:aclocal.m4:1630: -1- m4_include([m4/msvc-inval.m4])
m4trace:aclocal.m4:1631: -1- m4_include([m4/msvc-nothrow.m4])
m4trace:aclocal.m4:1632: -1- m4_include([m4/multiarch.m4])
m4trace:aclocal.m4:1633: -1- m4_include([m4/nocrash.m4])
m4trace:aclocal.m4:1634: -1- m4_include([m4/off_t.m4])
m4trace:aclocal.m4:1635: -1- m4_include([m4/printf.m4])
m4trace:aclocal.m4:1636: -1- m4_include([m4/size_max.m4])
m4trace:aclocal.m4:1637: -1- m4_include([m4/ssize_t.m4])
m4trace:aclocal.m4:1638: -1- m4_include([m4/stdarg.m4])
m4trace:aclocal.m4:1639: -1- m4_include([m4/stdbool.m4])
m4trace:aclocal.m4:1640: -1- m4_include([m4/stddef_h.m4])
m4trace:aclocal.m4:1641: -1- m4_include([m4/stdint.m4])
m4trace:aclocal.m4:1642: -1- m4_include([m4/stdint_h.m4])
m4trace:aclocal.m4:1643: -1- m4_include([m4/stdio_h.m4])
m4trace:aclocal.m4:1644: -1- m4_include([m4/stdlib_h.m4])
m4trace:aclocal.m4:1645: -1- m4_include([m4/strerror.m4])
m4trace:aclocal.m4:1646: -1- m4_include([m4/string_h.m4])
m4trace:aclocal.m4:1647: -1- m4_include([m4/strndup.m4])
m4trace:aclocal.m4:1648: -1- m4_include([m4/strnlen.m4])
m4trace:aclocal.m4:1649: -1- m4_include([m4/sys_socket_h.m4])
m4trace:aclocal.m4:1650: -1- m4_include([m4/sys_types_h.m4])
m4trace:aclocal.m4:1651: -1- m4_include([m4/unistd_h.m4])
m4trace:aclocal.m4:1652: -1- m4_include([m4/vasnprintf.m4])
m4trace:aclocal.m4:1653: -1- m4_include([m4/vasprintf.m4])
m4trace:aclocal.m4:1654: -1- m4_include([m4/warn-on-use.m4])
m4trace:aclocal.m4:1655: -1- m4_include([m4/wchar_h.m4])
m4trace:aclocal.m4:1656: -1- m4_include([m4/wchar_t.m4])
m4trace:aclocal.m4:1657: -1- m4_include([m4/wint_t.m4])
m4trace:aclocal.m4:1658: -1- m4_include([m4/xalloc.m4])
m4trace:aclocal.m4:1659: -1- m4_include([m4/xsize.m4])
m4trace:aclocal.m4:1660: -1- m4_include([m4/xvasprintf.m4])
m4trace:configure.ac:5: -1- AC_INIT([asm6809], [2.10])
m4trace:configure.ac:5: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:5: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:5: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:5: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:5: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:5: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:5: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:5: -1- AC_SUBST([SHELL])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([SHELL])
m4trace:configure.ac:5: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:5: -1- AC_SUBST([PATH_SEPARATOR])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([PATH_SEPARATOR])
m4trace:configure.ac:5: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:5: -1- AC_SUBST([PACKAGE_NAME], [m4_ifdef([AC_PACKAGE_NAME],      ['AC_PACKAGE_NAME'])])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([PACKAGE_NAME])
m4trace:configure.ac:5: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:5: -1- AC_SUBST([PACKAGE_TARNAME], [m4_ifdef([AC_PACKAGE_TARNAME],   ['AC_PACKAGE_TARNAME'])])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([PACKAGE_TARNAME])
m4trace:configure.ac:5: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:5: -1- AC_SUBST([PACKAGE_VERSION], [m4_ifdef([AC_PACKAGE_VERSION],   ['AC_PACKAGE_VERSION'])])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([PACKAGE_VERSION])
m4trace:configure.ac:5: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:5: -1- AC_SUBST([PACKAGE_STRING], [m4_ifdef([AC_PACKAGE_STRING],    ['AC_PACKAGE_STRING'])])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([PACKAGE_STRING])
m4trace:configure.ac:5: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:5: -1- AC_SUBST([PACKAGE_BUGREPORT], [m4_ifdef([AC_PACKAGE_BUGREPORT], ['AC_PACKAGE_BUGREPORT'])])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([PACKAGE_BUGREPORT])
m4trace:configure.ac:5: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:5: -1- AC_SUBST([PACKAGE_URL], [m4_ifdef([AC_PACKAGE_URL],       ['AC_PACKAGE_URL'])])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([PACKAGE_URL])
m4trace:configure.ac:5: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:5: -1- AC_SUBST([exec_prefix], [NONE])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([exec_prefix])
m4trace:configure.ac:5: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:5: -1- AC_SUBST([prefix], [NONE])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([prefix])
m4trace:configure.ac:5: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:5: -1- AC_SUBST([program_transform_name], [s,x,x,])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([program_transform_name])
m4trace:configure.ac:5: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:5: -1- AC_SUBST([bindir], ['${exec_prefix}/bin'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([bindir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:5: -1- AC_SUBST([sbindir], ['${exec_prefix}/sbin'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([sbindir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:5: -1- AC_SUBST([libexecdir], ['${exec_prefix}/libexec'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([libexecdir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:5: -1- AC_SUBST([datarootdir], ['${prefix}/share'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([datarootdir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:5: -1- AC_SUBST([datadir], ['${datarootdir}'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([datadir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:5: -1- AC_SUBST([sysconfdir], ['${prefix}/etc'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([sysconfdir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:5: -1- AC_SUBST([sharedstatedir], ['${prefix}/com'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([sharedstatedir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:5: -1- AC_SUBST([localstatedir], ['${prefix}/var'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([localstatedir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:5: -1- AC_SUBST([runstatedir], ['${localstatedir}/run'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([runstatedir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:5: -1- AC_SUBST([includedir], ['${prefix}/include'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([includedir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:5: -1- AC_SUBST([oldincludedir], ['/usr/include'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([oldincludedir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:5: -1- AC_SUBST([docdir], [m4_ifset([AC_PACKAGE_TARNAME],
				     ['${datarootdir}/doc/${PACKAGE_TARNAME}'],
				     ['${datarootdir}/doc/${PACKAGE}'])])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([docdir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:5: -1- AC_SUBST([infodir], ['${datarootdir}/info'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([infodir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:5: -1- AC_SUBST([htmldir], ['${docdir}'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([htmldir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:5: -1- AC_SUBST([dvidir], ['${docdir}'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([dvidir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:5: -1- AC_SUBST([pdfdir], ['${docdir}'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([pdfdir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:5: -1- AC_SUBST([psdir], ['${docdir}'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([psdir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:5: -1- AC_SUBST([libdir], ['${exec_prefix}/lib'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([libdir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:5: -1- AC_SUBST([localedir], ['${datarootdir}/locale'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([localedir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:5: -1- AC_SUBST([mandir], ['${datarootdir}/man'])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([mandir])
m4trace:configure.ac:5: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_NAME])
m4trace:configure.ac:5: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:5: -1- AH_OUTPUT([PACKAGE_NAME], [/* Define to the full name of this package. */
@%:@undef PACKAGE_NAME])
m4trace:configure.ac:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_TARNAME])
m4trace:configure.ac:5: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:5: -1- AH_OUTPUT([PACKAGE_TARNAME], [/* Define to the one symbol short name of this package. */
@%:@undef PACKAGE_TARNAME])
m4trace:configure.ac:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_VERSION])
m4trace:configure.ac:5: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:5: -1- AH_OUTPUT([PACKAGE_VERSION], [/* Define to the version of this package. */
@%:@undef PACKAGE_VERSION])
m4trace:configure.ac:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_STRING])
m4trace:configure.ac:5: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:5: -1- AH_OUTPUT([PACKAGE_STRING], [/* Define to the full name and version of this package. */
@%:@undef PACKAGE_STRING])
m4trace:configure.ac:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_BUGREPORT])
m4trace:configure.ac:5: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:5: -1- AH_OUTPUT([PACKAGE_BUGREPORT], [/* Define to the address where bug reports for this package should be sent. */
@%:@undef PACKAGE_BUGREPORT])
m4trace:configure.ac:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_URL])
m4trace:configure.ac:5: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:5: -1- AH_OUTPUT([PACKAGE_URL], [/* Define to the home page for this package. */
@%:@undef PACKAGE_URL])
m4trace:configure.ac:5: -1- AC_SUBST([DEFS])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([DEFS])
m4trace:configure.ac:5: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:5: -1- AC_SUBST([ECHO_C])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([ECHO_C])
m4trace:configure.ac:5: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:5: -1- AC_SUBST([ECHO_N])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([ECHO_N])
m4trace:configure.ac:5: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:5: -1- AC_SUBST([ECHO_T])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([ECHO_T])
m4trace:configure.ac:5: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:5: -1- AC_SUBST([LIBS])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([LIBS])
m4trace:configure.ac:5: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:5: -1- AC_SUBST([build_alias])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([build_alias])
m4trace:configure.ac:5: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:5: -1- AC_SUBST([host_alias])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([host_alias])
m4trace:configure.ac:5: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:5: -1- AC_SUBST([target_alias])
m4trace:configure.ac:5: -1- AC_SUBST_TRACE([target_alias])
m4trace:configure.ac:5: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:6: -1- AM_INIT_AUTOMAKE
m4trace:configure.ac:6: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:6: -1- AM_AUTOMAKE_VERSION([1.15.1])
m4trace:configure.ac:6: -1- AC_REQUIRE_AUX_FILE([install-sh])
m4trace:configure.ac:6: -1- AC_SUBST([INSTALL_PROGRAM])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([INSTALL_PROGRAM])
m4trace:configure.ac:6: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:6: -1- AC_SUBST([INSTALL_SCRIPT])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([INSTALL_SCRIPT])
m4trace:configure.ac:6: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:6: -1- AC_SUBST([INSTALL_DATA])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([INSTALL_DATA])
m4trace:configure.ac:6: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:6: -1- AC_SUBST([am__isrc], [' -I$(srcdir)'])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([am__isrc])
m4trace:configure.ac:6: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:6: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:6: -1- AC_SUBST([CYGPATH_W])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([CYGPATH_W])
m4trace:configure.ac:6: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:6: -1- AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([PACKAGE])
m4trace:configure.ac:6: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:6: -1- AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([VERSION])
m4trace:configure.ac:6: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:6: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE])
m4trace:configure.ac:6: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:6: -1- AH_OUTPUT([PACKAGE], [/* Name of package */
@%:@undef PACKAGE])
m4trace:configure.ac:6: -1- AC_DEFINE_TRACE_LITERAL([VERSION])
m4trace:configure.ac:6: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:6: -1- AH_OUTPUT([VERSION], [/* Version number of package */
@%:@undef VERSION])
m4trace:configure.ac:6: -1- AC_REQUIRE_AUX_FILE([missing])
m4trace:configure.ac:6: -1- AC_SUBST([ACLOCAL])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([ACLOCAL])
m4trace:configure.ac:6: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:6: -1- AC_SUBST([AUTOCONF])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([AUTOCONF])
m4trace:configure.ac:6: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:6: -1- AC_SUBST([AUTOMAKE])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([AUTOMAKE])
m4trace:configure.ac:6: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:6: -1- AC_SUBST([AUTOHEADER])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([AUTOHEADER])
m4trace:configure.ac:6: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:6: -1- AC_SUBST([MAKEINFO])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([MAKEINFO])
m4trace:configure.ac:6: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:6: -1- AC_SUBST([install_sh])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([install_sh])
m4trace:configure.ac:6: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:6: -1- AC_SUBST([STRIP])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([STRIP])
m4trace:configure.ac:6: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:6: -1- AC_SUBST([INSTALL_STRIP_PROGRAM])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([INSTALL_STRIP_PROGRAM])
m4trace:configure.ac:6: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:6: -1- AC_REQUIRE_AUX_FILE([install-sh])
m4trace:configure.ac:6: -1- AC_SUBST([MKDIR_P])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([MKDIR_P])
m4trace:configure.ac:6: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:6: -1- AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([mkdir_p])
m4trace:configure.ac:6: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:6: -1- AC_SUBST([AWK])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([AWK])
m4trace:configure.ac:6: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:6: -1- AC_SUBST([SET_MAKE])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([SET_MAKE])
m4trace:configure.ac:6: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:6: -1- AC_SUBST([am__leading_dot])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([am__leading_dot])
m4trace:configure.ac:6: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:6: -1- AC_SUBST([AMTAR], ['$${TAR-tar}'])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([AMTAR])
m4trace:configure.ac:6: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:6: -1- AC_SUBST([am__tar])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([am__tar])
m4trace:configure.ac:6: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:6: -1- AC_SUBST([am__untar])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([am__untar])
m4trace:configure.ac:6: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:6: -1- AM_SILENT_RULES
m4trace:configure.ac:6: -1- AC_SUBST([AM_V])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([AM_V])
m4trace:configure.ac:6: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:6: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:6: -1- AC_SUBST([AM_DEFAULT_V])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([AM_DEFAULT_V])
m4trace:configure.ac:6: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:6: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:6: -1- AC_SUBST([AM_DEFAULT_VERBOSITY])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([AM_DEFAULT_VERBOSITY])
m4trace:configure.ac:6: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:6: -1- AC_SUBST([AM_BACKSLASH])
m4trace:configure.ac:6: -1- AC_SUBST_TRACE([AM_BACKSLASH])
m4trace:configure.ac:6: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:6: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:8: -1- AC_CONFIG_HEADERS([config.h])
m4trace:configure.ac:11: -1- AC_SUBST([CC])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([CC])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- AC_SUBST([CFLAGS])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([CFLAGS])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:11: -1- AC_SUBST([LDFLAGS])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([LDFLAGS])
m4trace:configure.ac:11: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:11: -1- AC_SUBST([LIBS])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([LIBS])
m4trace:configure.ac:11: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:11: -1- AC_SUBST([CPPFLAGS])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([CPPFLAGS])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:11: -1- AC_SUBST([CC])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([CC])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- AC_SUBST([CC])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([CC])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- AC_SUBST([CC])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([CC])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- AC_SUBST([CC])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([CC])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- AC_SUBST([ac_ct_CC])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([ac_ct_CC])
m4trace:configure.ac:11: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:11: -1- AC_SUBST([EXEEXT], [$ac_cv_exeext])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([EXEEXT])
m4trace:configure.ac:11: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:11: -1- AC_SUBST([OBJEXT], [$ac_cv_objext])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([OBJEXT])
m4trace:configure.ac:11: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:11: -1- AC_REQUIRE_AUX_FILE([compile])
m4trace:configure.ac:11: -1- AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([DEPDIR])
m4trace:configure.ac:11: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:11: -1- AC_SUBST([am__include])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([am__include])
m4trace:configure.ac:11: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:11: -1- AC_SUBST([am__quote])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([am__quote])
m4trace:configure.ac:11: -1- m4_pattern_allow([^am__quote$])
m4trace:configure.ac:11: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:11: -1- AC_SUBST([AMDEP_TRUE])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([AMDEP_TRUE])
m4trace:configure.ac:11: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:11: -1- AC_SUBST([AMDEP_FALSE])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([AMDEP_FALSE])
m4trace:configure.ac:11: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:11: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:11: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:11: -1- AC_SUBST([AMDEPBACKSLASH])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([AMDEPBACKSLASH])
m4trace:configure.ac:11: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:11: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:11: -1- AC_SUBST([am__nodep])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([am__nodep])
m4trace:configure.ac:11: -1- m4_pattern_allow([^am__nodep$])
m4trace:configure.ac:11: -1- _AM_SUBST_NOTMAKE([am__nodep])
m4trace:configure.ac:11: -1- AC_SUBST([CCDEPMODE], [depmode=$am_cv_CC_dependencies_compiler_type])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([CCDEPMODE])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:11: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:11: -1- AC_SUBST([am__fastdepCC_TRUE])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([am__fastdepCC_TRUE])
m4trace:configure.ac:11: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:11: -1- AC_SUBST([am__fastdepCC_FALSE])
m4trace:configure.ac:11: -1- AC_SUBST_TRACE([am__fastdepCC_FALSE])
m4trace:configure.ac:11: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:11: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:11: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:13: -1- m4_pattern_forbid([^gl_[A-Z]])
m4trace:configure.ac:13: -1- m4_pattern_allow([^gl_ES$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^gl_LIBOBJS$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^gl_LTLIBOBJS$])
m4trace:configure.ac:13: -1- _m4_warn([obsolete], [The macro `AC_GNU_SOURCE' is obsolete.
You should run autoupdate.], [/usr/src/ports/autoconf2.5/autoconf2.5-2.69-4.noarch/src/autoconf-2.69/lib/autoconf/specific.m4:314: AC_GNU_SOURCE is expanded from...
m4/gnulib-comp.m4:34: gl_EARLY is expanded from...
configure.ac:13: the top level])
m4trace:configure.ac:13: -1- AC_SUBST([CPP])
m4trace:configure.ac:13: -1- AC_SUBST_TRACE([CPP])
m4trace:configure.ac:13: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:13: -1- AC_SUBST([CPPFLAGS])
m4trace:configure.ac:13: -1- AC_SUBST_TRACE([CPPFLAGS])
m4trace:configure.ac:13: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:13: -1- AC_SUBST([CPP])
m4trace:configure.ac:13: -1- AC_SUBST_TRACE([CPP])
m4trace:configure.ac:13: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:13: -1- AC_SUBST([GREP])
m4trace:configure.ac:13: -1- AC_SUBST_TRACE([GREP])
m4trace:configure.ac:13: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:13: -1- AC_SUBST([EGREP])
m4trace:configure.ac:13: -1- AC_SUBST_TRACE([EGREP])
m4trace:configure.ac:13: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([STDC_HEADERS])
m4trace:configure.ac:13: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:13: -1- AH_OUTPUT([STDC_HEADERS], [/* Define to 1 if you have the ANSI C header files. */
@%:@undef STDC_HEADERS])
m4trace:configure.ac:13: -1- AH_OUTPUT([HAVE_SYS_TYPES_H], [/* Define to 1 if you have the <sys/types.h> header file. */
@%:@undef HAVE_SYS_TYPES_H])
m4trace:configure.ac:13: -1- AH_OUTPUT([HAVE_SYS_STAT_H], [/* Define to 1 if you have the <sys/stat.h> header file. */
@%:@undef HAVE_SYS_STAT_H])
m4trace:configure.ac:13: -1- AH_OUTPUT([HAVE_STDLIB_H], [/* Define to 1 if you have the <stdlib.h> header file. */
@%:@undef HAVE_STDLIB_H])
m4trace:configure.ac:13: -1- AH_OUTPUT([HAVE_STRING_H], [/* Define to 1 if you have the <string.h> header file. */
@%:@undef HAVE_STRING_H])
m4trace:configure.ac:13: -1- AH_OUTPUT([HAVE_MEMORY_H], [/* Define to 1 if you have the <memory.h> header file. */
@%:@undef HAVE_MEMORY_H])
m4trace:configure.ac:13: -1- AH_OUTPUT([HAVE_STRINGS_H], [/* Define to 1 if you have the <strings.h> header file. */
@%:@undef HAVE_STRINGS_H])
m4trace:configure.ac:13: -1- AH_OUTPUT([HAVE_INTTYPES_H], [/* Define to 1 if you have the <inttypes.h> header file. */
@%:@undef HAVE_INTTYPES_H])
m4trace:configure.ac:13: -1- AH_OUTPUT([HAVE_STDINT_H], [/* Define to 1 if you have the <stdint.h> header file. */
@%:@undef HAVE_STDINT_H])
m4trace:configure.ac:13: -1- AH_OUTPUT([HAVE_UNISTD_H], [/* Define to 1 if you have the <unistd.h> header file. */
@%:@undef HAVE_UNISTD_H])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([_POSIX_SOURCE])
m4trace:configure.ac:13: -1- m4_pattern_allow([^_POSIX_SOURCE$])
m4trace:configure.ac:13: -1- AH_OUTPUT([_POSIX_SOURCE], [/* Define to 1 if you need to in order for \'stat\' and other things to work. */
@%:@undef _POSIX_SOURCE])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([_POSIX_1_SOURCE])
m4trace:configure.ac:13: -1- m4_pattern_allow([^_POSIX_1_SOURCE$])
m4trace:configure.ac:13: -1- AH_OUTPUT([_POSIX_1_SOURCE], [/* Define to 2 if the system does not provide POSIX.1 features except with
   this defined. */
@%:@undef _POSIX_1_SOURCE])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([_MINIX])
m4trace:configure.ac:13: -1- m4_pattern_allow([^_MINIX$])
m4trace:configure.ac:13: -1- AH_OUTPUT([_MINIX], [/* Define to 1 if on MINIX. */
@%:@undef _MINIX])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([_NETBSD_SOURCE])
m4trace:configure.ac:13: -1- m4_pattern_allow([^_NETBSD_SOURCE$])
m4trace:configure.ac:13: -1- AH_OUTPUT([_NETBSD_SOURCE], [/* Define to 1 to make NetBSD features available. MINIX 3 needs this. */
@%:@undef _NETBSD_SOURCE])
m4trace:configure.ac:13: -1- AH_OUTPUT([USE_SYSTEM_EXTENSIONS], [/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# undef _ALL_SOURCE
#endif
/* Enable general extensions on macOS.  */
#ifndef _DARWIN_C_SOURCE
# undef _DARWIN_C_SOURCE
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# undef _GNU_SOURCE
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# undef _POSIX_PTHREAD_SEMANTICS
#endif
/* Enable extensions specified by ISO/IEC TS 18661-5:2014.  */
#ifndef __STDC_WANT_IEC_60559_ATTRIBS_EXT__
# undef __STDC_WANT_IEC_60559_ATTRIBS_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-1:2014.  */
#ifndef __STDC_WANT_IEC_60559_BFP_EXT__
# undef __STDC_WANT_IEC_60559_BFP_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-2:2015.  */
#ifndef __STDC_WANT_IEC_60559_DFP_EXT__
# undef __STDC_WANT_IEC_60559_DFP_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-4:2015.  */
#ifndef __STDC_WANT_IEC_60559_FUNCS_EXT__
# undef __STDC_WANT_IEC_60559_FUNCS_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-3:2015.  */
#ifndef __STDC_WANT_IEC_60559_TYPES_EXT__
# undef __STDC_WANT_IEC_60559_TYPES_EXT__
#endif
/* Enable extensions specified by ISO/IEC TR 24731-2:2010.  */
#ifndef __STDC_WANT_LIB_EXT2__
# undef __STDC_WANT_LIB_EXT2__
#endif
/* Enable extensions specified by ISO/IEC 24747:2009.  */
#ifndef __STDC_WANT_MATH_SPEC_FUNCS__
# undef __STDC_WANT_MATH_SPEC_FUNCS__
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# undef _TANDEM_SOURCE
#endif
/* Enable X/Open extensions if necessary.  HP-UX 11.11 defines
   mbstate_t only if _XOPEN_SOURCE is defined to 500, regardless of
   whether compiling with -Ae or -D_HPUX_SOURCE=1.  */
#ifndef _XOPEN_SOURCE
# undef _XOPEN_SOURCE
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# undef __EXTENSIONS__
#endif
])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([__EXTENSIONS__])
m4trace:configure.ac:13: -1- m4_pattern_allow([^__EXTENSIONS__$])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([_ALL_SOURCE])
m4trace:configure.ac:13: -1- m4_pattern_allow([^_ALL_SOURCE$])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([_DARWIN_C_SOURCE])
m4trace:configure.ac:13: -1- m4_pattern_allow([^_DARWIN_C_SOURCE$])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([_GNU_SOURCE])
m4trace:configure.ac:13: -1- m4_pattern_allow([^_GNU_SOURCE$])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([_POSIX_PTHREAD_SEMANTICS])
m4trace:configure.ac:13: -1- m4_pattern_allow([^_POSIX_PTHREAD_SEMANTICS$])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([__STDC_WANT_IEC_60559_ATTRIBS_EXT__])
m4trace:configure.ac:13: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_ATTRIBS_EXT__$])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([__STDC_WANT_IEC_60559_BFP_EXT__])
m4trace:configure.ac:13: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_BFP_EXT__$])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([__STDC_WANT_IEC_60559_DFP_EXT__])
m4trace:configure.ac:13: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_DFP_EXT__$])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([__STDC_WANT_IEC_60559_FUNCS_EXT__])
m4trace:configure.ac:13: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_FUNCS_EXT__$])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([__STDC_WANT_IEC_60559_TYPES_EXT__])
m4trace:configure.ac:13: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_TYPES_EXT__$])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([__STDC_WANT_LIB_EXT2__])
m4trace:configure.ac:13: -1- m4_pattern_allow([^__STDC_WANT_LIB_EXT2__$])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([__STDC_WANT_MATH_SPEC_FUNCS__])
m4trace:configure.ac:13: -1- m4_pattern_allow([^__STDC_WANT_MATH_SPEC_FUNCS__$])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([_TANDEM_SOURCE])
m4trace:configure.ac:13: -1- m4_pattern_allow([^_TANDEM_SOURCE$])
m4trace:configure.ac:13: -1- AC_DEFINE_TRACE_LITERAL([_XOPEN_SOURCE])
m4trace:configure.ac:13: -1- m4_pattern_allow([^_XOPEN_SOURCE$])
m4trace:configure.ac:13: -1- AC_SUBST([AR])
m4trace:configure.ac:13: -1- AC_SUBST_TRACE([AR])
m4trace:configure.ac:13: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:13: -1- AC_SUBST([AR])
m4trace:configure.ac:13: -1- AC_SUBST_TRACE([AR])
m4trace:configure.ac:13: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:13: -1- AC_SUBST([ARFLAGS])
m4trace:configure.ac:13: -1- AC_SUBST_TRACE([ARFLAGS])
m4trace:configure.ac:13: -1- m4_pattern_allow([^ARFLAGS$])
m4trace:configure.ac:13: -1- AC_SUBST([RANLIB])
m4trace:configure.ac:13: -1- AC_SUBST_TRACE([RANLIB])
m4trace:configure.ac:13: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:13: -1- AC_SUBST([RANLIB])
m4trace:configure.ac:13: -1- AC_SUBST_TRACE([RANLIB])
m4trace:configure.ac:13: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:14: -1- AC_SUBST([YACC])
m4trace:configure.ac:14: -1- AC_SUBST_TRACE([YACC])
m4trace:configure.ac:14: -1- m4_pattern_allow([^YACC$])
m4trace:configure.ac:14: -1- AC_SUBST([YACC])
m4trace:configure.ac:14: -1- AC_SUBST_TRACE([YACC])
m4trace:configure.ac:14: -1- m4_pattern_allow([^YACC$])
m4trace:configure.ac:14: -1- AC_SUBST([YFLAGS])
m4trace:configure.ac:14: -1- AC_SUBST_TRACE([YFLAGS])
m4trace:configure.ac:14: -1- m4_pattern_allow([^YFLAGS$])
m4trace:configure.ac:15: -1- AC_SUBST([LEX])
m4trace:configure.ac:15: -1- AC_SUBST_TRACE([LEX])
m4trace:configure.ac:15: -1- m4_pattern_allow([^LEX$])
m4trace:configure.ac:15: -1- AC_SUBST([LEX_OUTPUT_ROOT], [$ac_cv_prog_lex_root])
m4trace:configure.ac:15: -1- AC_SUBST_TRACE([LEX_OUTPUT_ROOT])
m4trace:configure.ac:15: -1- m4_pattern_allow([^LEX_OUTPUT_ROOT$])
m4trace:configure.ac:15: -1- AC_SUBST([LEXLIB])
m4trace:configure.ac:15: -1- AC_SUBST_TRACE([LEXLIB])
m4trace:configure.ac:15: -1- m4_pattern_allow([^LEXLIB$])
m4trace:configure.ac:15: -1- AC_DEFINE_TRACE_LITERAL([YYTEXT_POINTER])
m4trace:configure.ac:15: -1- m4_pattern_allow([^YYTEXT_POINTER$])
m4trace:configure.ac:15: -1- AH_OUTPUT([YYTEXT_POINTER], [/* Define to 1 if `lex\' declares `yytext\' as a `char *\' by default, not a
   `char@<:@@:>@\'. */
@%:@undef YYTEXT_POINTER])
m4trace:configure.ac:20: -1- AM_CONDITIONAL([GL_COND_LIBTOOL], [false])
m4trace:configure.ac:20: -1- AC_SUBST([GL_COND_LIBTOOL_TRUE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_COND_LIBTOOL_TRUE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_COND_LIBTOOL_TRUE$])
m4trace:configure.ac:20: -1- AC_SUBST([GL_COND_LIBTOOL_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_COND_LIBTOOL_FALSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_COND_LIBTOOL_FALSE$])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_COND_LIBTOOL_TRUE])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_COND_LIBTOOL_FALSE])
m4trace:configure.ac:20: -1- AH_OUTPUT([_Noreturn], [/* The _Noreturn keyword of C11.  */
#if ! (defined _Noreturn \\
       || (defined __STDC_VERSION__ && 201112 <= __STDC_VERSION__))
# if (3 <= __GNUC__ || (__GNUC__ == 2 && 8 <= __GNUC_MINOR__) \\
      || 0x5110 <= __SUNPRO_C)
#  define _Noreturn __attribute__ ((__noreturn__))
# elif defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn
# endif
#endif
])
m4trace:configure.ac:20: -1- AH_OUTPUT([isoc99_inline], [/* Work around a bug in Apple GCC 4.0.1 build 5465: In C99 mode, it supports
   the ISO C 99 semantics of \'extern inline\' (unlike the GNU C semantics of
   earlier versions), but does not display it by setting __GNUC_STDC_INLINE__.
   __APPLE__ && __MACH__ test for Mac OS X.
   __APPLE_CC__ tests for the Apple compiler and its version.
   __STDC_VERSION__ tests for the C99 mode.  */
#if defined __APPLE__ && defined __MACH__ && __APPLE_CC__ >= 5465 && !defined __cplusplus && __STDC_VERSION__ >= 199901L && !defined __GNUC_STDC_INLINE__
# define __GNUC_STDC_INLINE__ 1
#endif])
m4trace:configure.ac:20: -1- AH_OUTPUT([unused_parameter], [/* Define as a marker that can be attached to declarations that might not
    be used.  This helps to reduce warnings, such as from
    GCC -Wunused-parameter.  */
#if __GNUC__ >= 3 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 7)
# define _GL_UNUSED __attribute__ ((__unused__))
#else
# define _GL_UNUSED
#endif
/* The name _UNUSED_PARAMETER_ is an earlier spelling, although the name
   is a misnomer outside of parameter lists.  */
#define _UNUSED_PARAMETER_ _GL_UNUSED

/* gcc supports the "unused" attribute on possibly unused labels, and
   g++ has since version 4.5.  Note to support C++ as well as C,
   _GL_UNUSED_LABEL should be used with a trailing ;  */
#if !defined __cplusplus || __GNUC__ > 4 \\
    || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
# define _GL_UNUSED_LABEL _GL_UNUSED
#else
# define _GL_UNUSED_LABEL
#endif

/* The __pure__ attribute was added in gcc 2.96.  */
#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 96)
# define _GL_ATTRIBUTE_PURE __attribute__ ((__pure__))
#else
# define _GL_ATTRIBUTE_PURE /* empty */
#endif

/* The __const__ attribute was added in gcc 2.95.  */
#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
# define _GL_ATTRIBUTE_CONST __attribute__ ((__const__))
#else
# define _GL_ATTRIBUTE_CONST /* empty */
#endif
])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([size_t])
m4trace:configure.ac:20: -1- m4_pattern_allow([^size_t$])
m4trace:configure.ac:20: -1- AH_OUTPUT([size_t], [/* Define to `unsigned int\' if <sys/types.h> does not define. */
@%:@undef size_t])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_ALLOCA_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_ALLOCA_H$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_ALLOCA_H], [/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).
   */
@%:@undef HAVE_ALLOCA_H])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_ALLOCA])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_ALLOCA], [/* Define to 1 if you have `alloca\', as a function or macro. */
@%:@undef HAVE_ALLOCA])
m4trace:configure.ac:20: -1- AC_SUBST([ALLOCA], [\${LIBOBJDIR}alloca.$ac_objext])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([ALLOCA])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ALLOCA$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([C_ALLOCA])
m4trace:configure.ac:20: -1- m4_pattern_allow([^C_ALLOCA$])
m4trace:configure.ac:20: -1- AH_OUTPUT([C_ALLOCA], [/* Define to 1 if using `alloca.c\'. */
@%:@undef C_ALLOCA])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([CRAY_STACKSEG_END])
m4trace:configure.ac:20: -1- m4_pattern_allow([^CRAY_STACKSEG_END$])
m4trace:configure.ac:20: -1- AH_OUTPUT([CRAY_STACKSEG_END], [/* Define to one of `_getb67\', `GETB67\', `getb67\' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c\' support on those systems.
   */
@%:@undef CRAY_STACKSEG_END])
m4trace:configure.ac:20: -1- AH_OUTPUT([STACK_DIRECTION], [/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at runtime.
	STACK_DIRECTION > 0 => grows toward higher addresses
	STACK_DIRECTION < 0 => grows toward lower addresses
	STACK_DIRECTION = 0 => direction of growth unknown */
@%:@undef STACK_DIRECTION])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([STACK_DIRECTION])
m4trace:configure.ac:20: -1- m4_pattern_allow([^STACK_DIRECTION$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_ALLOCA])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_ALLOCA], [/* Define to 1 if you have \'alloca\' after including <alloca.h>, a header that
   may be supplied by this distribution. */
@%:@undef HAVE_ALLOCA])
m4trace:configure.ac:20: -1- AC_SUBST([ALLOCA_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([ALLOCA_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ALLOCA_H$])
m4trace:configure.ac:20: -1- AM_CONDITIONAL([GL_GENERATE_ALLOCA_H], [test -n "$ALLOCA_H"])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_ALLOCA_H_TRUE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_ALLOCA_H_TRUE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_ALLOCA_H_TRUE$])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_ALLOCA_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_ALLOCA_H_FALSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_ALLOCA_H_FALSE$])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ALLOCA_H_TRUE])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ALLOCA_H_FALSE])
m4trace:configure.ac:20: -1- AC_CANONICAL_HOST
m4trace:configure.ac:20: -1- AC_CANONICAL_BUILD
m4trace:configure.ac:20: -1- AC_REQUIRE_AUX_FILE([config.sub])
m4trace:configure.ac:20: -1- AC_REQUIRE_AUX_FILE([config.guess])
m4trace:configure.ac:20: -1- AC_SUBST([build], [$ac_cv_build])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([build])
m4trace:configure.ac:20: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:20: -1- AC_SUBST([build_cpu], [$[1]])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([build_cpu])
m4trace:configure.ac:20: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:20: -1- AC_SUBST([build_vendor], [$[2]])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([build_vendor])
m4trace:configure.ac:20: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:20: -1- AC_SUBST([build_os])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([build_os])
m4trace:configure.ac:20: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:20: -1- AC_SUBST([host], [$ac_cv_host])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([host])
m4trace:configure.ac:20: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:20: -1- AC_SUBST([host_cpu], [$[1]])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([host_cpu])
m4trace:configure.ac:20: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:20: -1- AC_SUBST([host_vendor], [$[2]])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([host_vendor])
m4trace:configure.ac:20: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:20: -1- AC_SUBST([host_os])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([host_os])
m4trace:configure.ac:20: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([DOUBLE_SLASH_IS_DISTINCT_ROOT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^DOUBLE_SLASH_IS_DISTINCT_ROOT$])
m4trace:configure.ac:20: -1- AH_OUTPUT([DOUBLE_SLASH_IS_DISTINCT_ROOT], [/* Define to 1 if // is a file system root distinct from /. */
@%:@undef DOUBLE_SLASH_IS_DISTINCT_ROOT])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([DOUBLE_SLASH_IS_DISTINCT_ROOT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^DOUBLE_SLASH_IS_DISTINCT_ROOT$])
m4trace:configure.ac:20: -1- AH_OUTPUT([DOUBLE_SLASH_IS_DISTINCT_ROOT], [/* Define to 1 if // is a file system root distinct from /. */
@%:@undef DOUBLE_SLASH_IS_DISTINCT_ROOT])
m4trace:configure.ac:20: -1- AC_SUBST([INCLUDE_NEXT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([INCLUDE_NEXT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^INCLUDE_NEXT$])
m4trace:configure.ac:20: -1- AC_SUBST([INCLUDE_NEXT_AS_FIRST_DIRECTIVE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([INCLUDE_NEXT_AS_FIRST_DIRECTIVE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^INCLUDE_NEXT_AS_FIRST_DIRECTIVE$])
m4trace:configure.ac:20: -1- AC_SUBST([PRAGMA_SYSTEM_HEADER])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([PRAGMA_SYSTEM_HEADER])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PRAGMA_SYSTEM_HEADER$])
m4trace:configure.ac:20: -1- AC_SUBST([PRAGMA_COLUMNS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([PRAGMA_COLUMNS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PRAGMA_COLUMNS$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_ERRNO_H], [AS_VAR_GET(gl_next_header)])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_ERRNO_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_ERRNO_H$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_AS_FIRST_DIRECTIVE_ERRNO_H], [$gl_next_as_first_directive])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_AS_FIRST_DIRECTIVE_ERRNO_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_ERRNO_H$])
m4trace:configure.ac:20: -1- AC_SUBST([ERRNO_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([ERRNO_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ERRNO_H$])
m4trace:configure.ac:20: -1- AM_CONDITIONAL([GL_GENERATE_ERRNO_H], [test -n "$ERRNO_H"])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_ERRNO_H_TRUE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_ERRNO_H_TRUE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_ERRNO_H_TRUE$])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_ERRNO_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_ERRNO_H_FALSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_ERRNO_H_FALSE$])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ERRNO_H_TRUE])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ERRNO_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST([EMULTIHOP_HIDDEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([EMULTIHOP_HIDDEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^EMULTIHOP_HIDDEN$])
m4trace:configure.ac:20: -1- AC_SUBST([EMULTIHOP_VALUE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([EMULTIHOP_VALUE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^EMULTIHOP_VALUE$])
m4trace:configure.ac:20: -1- AC_SUBST([ENOLINK_HIDDEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([ENOLINK_HIDDEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ENOLINK_HIDDEN$])
m4trace:configure.ac:20: -1- AC_SUBST([ENOLINK_VALUE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([ENOLINK_VALUE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ENOLINK_VALUE$])
m4trace:configure.ac:20: -1- AC_SUBST([EOVERFLOW_HIDDEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([EOVERFLOW_HIDDEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^EOVERFLOW_HIDDEN$])
m4trace:configure.ac:20: -1- AC_SUBST([EOVERFLOW_VALUE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([EOVERFLOW_VALUE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^EOVERFLOW_VALUE$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_STRERROR_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_STRERROR_R$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_DECL_STRERROR_R], [/* Define to 1 if you have the declaration of `strerror_r\', and to 0 if you
   don\'t. */
@%:@undef HAVE_DECL_STRERROR_R])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_STRERROR_R], [/* Define to 1 if you have the `strerror_r\' function. */
@%:@undef HAVE_STRERROR_R])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_STRERROR_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STRERROR_R$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([STRERROR_R_CHAR_P])
m4trace:configure.ac:20: -1- m4_pattern_allow([^STRERROR_R_CHAR_P$])
m4trace:configure.ac:20: -1- AH_OUTPUT([STRERROR_R_CHAR_P], [/* Define to 1 if strerror_r returns char *. */
@%:@undef STRERROR_R_CHAR_P])
m4trace:configure.ac:20: -1- AM_XGETTEXT_OPTION([--flag=error:3:c-format])
m4trace:configure.ac:20: -1- AM_XGETTEXT_OPTION([--flag=error_at_line:5:c-format])
m4trace:configure.ac:20: -1- AH_OUTPUT([extern_inline], [/* Please see the Gnulib manual for how to use these macros.

   Suppress extern inline with HP-UX cc, as it appears to be broken; see
   <http://lists.gnu.org/archive/html/bug-texinfo/2013-02/msg00030.html>.

   Suppress extern inline with Sun C in standards-conformance mode, as it
   mishandles inline functions that call each other.  E.g., for \'inline void f
   (void) { } inline void g (void) { f (); }\', c99 incorrectly complains
   \'reference to static identifier "f" in extern inline function\'.
   This bug was observed with Sun C 5.12 SunOS_i386 2011/11/16.

   Suppress extern inline (with or without __attribute__ ((__gnu_inline__)))
   on configurations that mistakenly use \'static inline\' to implement
   functions or macros in standard C headers like <ctype.h>.  For example,
   if isdigit is mistakenly implemented via a static inline function,
   a program containing an extern inline function that calls isdigit
   may not work since the C standard prohibits extern inline functions
   from calling static functions.  This bug is known to occur on:

     OS X 10.8 and earlier; see:
     http://lists.gnu.org/archive/html/bug-gnulib/2012-12/msg00023.html

     DragonFly; see
     http://muscles.dragonflybsd.org/bulk/bleeding-edge-potential/latest-per-pkg/ah-tty-0.3.12.log

     FreeBSD; see:
     http://lists.gnu.org/archive/html/bug-gnulib/2014-07/msg00104.html

   OS X 10.9 has a macro __header_inline indicating the bug is fixed for C and
   for clang but remains for g++; see <http://trac.macports.org/ticket/41033>.
   Assume DragonFly and FreeBSD will be similar.  */
#if (((defined __APPLE__ && defined __MACH__) \\
      || defined __DragonFly__ || defined __FreeBSD__) \\
     && (defined __header_inline \\
         ? (defined __cplusplus && defined __GNUC_STDC_INLINE__ \\
            && ! defined __clang__) \\
         : ((! defined _DONT_USE_CTYPE_INLINE_ \\
             && (defined __GNUC__ || defined __cplusplus)) \\
            || (defined _FORTIFY_SOURCE && 0 < _FORTIFY_SOURCE \\
                && defined __GNUC__ && ! defined __cplusplus))))
# define _GL_EXTERN_INLINE_STDHEADER_BUG
#endif
#if ((__GNUC__ \\
      ? defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__ \\
      : (199901L <= __STDC_VERSION__ \\
         && !defined __HP_cc \\
         && !defined __PGI \\
         && !(defined __SUNPRO_C && __STDC__))) \\
     && !defined _GL_EXTERN_INLINE_STDHEADER_BUG)
# define _GL_INLINE inline
# define _GL_EXTERN_INLINE extern inline
# define _GL_EXTERN_INLINE_IN_USE
#elif (2 < __GNUC__ + (7 <= __GNUC_MINOR__) && !defined __STRICT_ANSI__ \\
       && !defined _GL_EXTERN_INLINE_STDHEADER_BUG)
# if defined __GNUC_GNU_INLINE__ && __GNUC_GNU_INLINE__
   /* __gnu_inline__ suppresses a GCC 4.2 diagnostic.  */
#  define _GL_INLINE extern inline __attribute__ ((__gnu_inline__))
# else
#  define _GL_INLINE extern inline
# endif
# define _GL_EXTERN_INLINE extern
# define _GL_EXTERN_INLINE_IN_USE
#else
# define _GL_INLINE static _GL_UNUSED
# define _GL_EXTERN_INLINE static _GL_UNUSED
#endif

/* In GCC 4.6 (inclusive) to 5.1 (exclusive),
   suppress bogus "no previous prototype for \'FOO\'"
   and "no previous declaration for \'FOO\'" diagnostics,
   when FOO is an inline function in the header; see
   <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54113> and
   <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63877>.  */
#if __GNUC__ == 4 && 6 <= __GNUC_MINOR__
# if defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__
#  define _GL_INLINE_HEADER_CONST_PRAGMA
# else
#  define _GL_INLINE_HEADER_CONST_PRAGMA \\
     _Pragma ("GCC diagnostic ignored \\"-Wsuggest-attribute=const\\"")
# endif
# define _GL_INLINE_HEADER_BEGIN \\
    _Pragma ("GCC diagnostic push") \\
    _Pragma ("GCC diagnostic ignored \\"-Wmissing-prototypes\\"") \\
    _Pragma ("GCC diagnostic ignored \\"-Wmissing-declarations\\"") \\
    _GL_INLINE_HEADER_CONST_PRAGMA
# define _GL_INLINE_HEADER_END \\
    _Pragma ("GCC diagnostic pop")
#else
# define _GL_INLINE_HEADER_BEGIN
# define _GL_INLINE_HEADER_END
#endif])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_FLOAT_H], [AS_VAR_GET(gl_next_header)])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_FLOAT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_FLOAT_H$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_AS_FIRST_DIRECTIVE_FLOAT_H], [$gl_next_as_first_directive])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_AS_FIRST_DIRECTIVE_FLOAT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_FLOAT_H$])
m4trace:configure.ac:20: -1- AC_SUBST([FLOAT_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([FLOAT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^FLOAT_H$])
m4trace:configure.ac:20: -1- AM_CONDITIONAL([GL_GENERATE_FLOAT_H], [test -n "$FLOAT_H"])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_FLOAT_H_TRUE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_FLOAT_H_TRUE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_FLOAT_H_TRUE$])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_FLOAT_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_FLOAT_H_FALSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_FLOAT_H_FALSE$])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FLOAT_H_TRUE])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_FLOAT_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_ITOLD])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_ITOLD])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_ITOLD$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_CHDIR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_CHDIR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_CHDIR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_CHOWN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_CHOWN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_CHOWN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_CLOSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_CLOSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_CLOSE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_DUP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_DUP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_DUP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_DUP2])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_DUP2])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_DUP2$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_DUP3])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_DUP3])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_DUP3$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_ENVIRON])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_ENVIRON])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_ENVIRON$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_EUIDACCESS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_EUIDACCESS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_EUIDACCESS$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FACCESSAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FACCESSAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FACCESSAT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FCHDIR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FCHDIR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FCHDIR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FCHOWNAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FCHOWNAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FCHOWNAT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FDATASYNC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FDATASYNC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FDATASYNC$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FSYNC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FSYNC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FSYNC$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FTRUNCATE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FTRUNCATE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FTRUNCATE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETCWD])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETCWD])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETCWD$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETDOMAINNAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETDOMAINNAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETDOMAINNAME$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETDTABLESIZE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETDTABLESIZE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETDTABLESIZE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETGROUPS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETGROUPS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETGROUPS$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETHOSTNAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETHOSTNAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETHOSTNAME$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETLOGIN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETLOGIN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETLOGIN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETLOGIN_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETLOGIN_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETLOGIN_R$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETPAGESIZE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETPAGESIZE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETPAGESIZE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETUSERSHELL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETUSERSHELL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETUSERSHELL$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GROUP_MEMBER])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GROUP_MEMBER])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GROUP_MEMBER$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_ISATTY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_ISATTY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_ISATTY$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_LCHOWN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_LCHOWN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_LCHOWN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_LINK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_LINK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_LINK$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_LINKAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_LINKAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_LINKAT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_LSEEK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_LSEEK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_LSEEK$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_PIPE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_PIPE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PIPE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_PIPE2])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_PIPE2])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PIPE2$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_PREAD])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_PREAD])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PREAD$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_PWRITE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_PWRITE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PWRITE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_READ])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_READ])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_READ$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_READLINK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_READLINK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_READLINK$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_READLINKAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_READLINKAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_READLINKAT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_RMDIR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_RMDIR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_RMDIR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_SETHOSTNAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_SETHOSTNAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_SETHOSTNAME$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_SLEEP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_SLEEP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_SLEEP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_SYMLINK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_SYMLINK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_SYMLINK$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_SYMLINKAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_SYMLINKAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_SYMLINKAT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_TTYNAME_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_TTYNAME_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_TTYNAME_R$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_UNISTD_H_NONBLOCKING])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_UNISTD_H_NONBLOCKING])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_UNISTD_H_NONBLOCKING$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_UNISTD_H_SIGPIPE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_UNISTD_H_SIGPIPE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_UNISTD_H_SIGPIPE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_UNLINK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_UNLINK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_UNLINK$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_UNLINKAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_UNLINKAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_UNLINKAT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_USLEEP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_USLEEP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_USLEEP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WRITE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WRITE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WRITE$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_CHOWN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_CHOWN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_CHOWN$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DUP2])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DUP2])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DUP2$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DUP3])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DUP3])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DUP3$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_EUIDACCESS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_EUIDACCESS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_EUIDACCESS$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_FACCESSAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_FACCESSAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_FACCESSAT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_FCHDIR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_FCHDIR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_FCHDIR$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_FCHOWNAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_FCHOWNAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_FCHOWNAT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_FDATASYNC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_FDATASYNC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_FDATASYNC$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_FSYNC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_FSYNC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_FSYNC$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_FTRUNCATE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_FTRUNCATE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_FTRUNCATE$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_GETDTABLESIZE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_GETDTABLESIZE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_GETDTABLESIZE$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_GETGROUPS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_GETGROUPS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_GETGROUPS$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_GETHOSTNAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_GETHOSTNAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_GETHOSTNAME$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_GETLOGIN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_GETLOGIN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_GETLOGIN$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_GETPAGESIZE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_GETPAGESIZE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_GETPAGESIZE$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_GROUP_MEMBER])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_GROUP_MEMBER])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_GROUP_MEMBER$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_LCHOWN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_LCHOWN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_LCHOWN$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_LINK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_LINK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_LINK$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_LINKAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_LINKAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_LINKAT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_PIPE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_PIPE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_PIPE$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_PIPE2])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_PIPE2])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_PIPE2$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_PREAD])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_PREAD])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_PREAD$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_PWRITE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_PWRITE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_PWRITE$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_READLINK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_READLINK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_READLINK$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_READLINKAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_READLINKAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_READLINKAT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SETHOSTNAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SETHOSTNAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SETHOSTNAME$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SLEEP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SLEEP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SLEEP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SYMLINK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SYMLINK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SYMLINK$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SYMLINKAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SYMLINKAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SYMLINKAT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_UNLINKAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_UNLINKAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_UNLINKAT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_USLEEP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_USLEEP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_USLEEP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_ENVIRON])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_ENVIRON])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_ENVIRON$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_FCHDIR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_FCHDIR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_FCHDIR$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_FDATASYNC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_FDATASYNC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_FDATASYNC$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_GETDOMAINNAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_GETDOMAINNAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_GETDOMAINNAME$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_GETLOGIN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_GETLOGIN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_GETLOGIN$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_GETLOGIN_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_GETLOGIN_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_GETLOGIN_R$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_GETPAGESIZE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_GETPAGESIZE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_GETPAGESIZE$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_GETUSERSHELL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_GETUSERSHELL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_GETUSERSHELL$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_SETHOSTNAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_SETHOSTNAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_SETHOSTNAME$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_TTYNAME_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_TTYNAME_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_TTYNAME_R$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_OS_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_OS_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_OS_H$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SYS_PARAM_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SYS_PARAM_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SYS_PARAM_H$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_CHOWN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_CHOWN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_CHOWN$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_CLOSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_CLOSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_CLOSE$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_DUP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_DUP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_DUP$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_DUP2])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_DUP2])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_DUP2$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_FCHOWNAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_FCHOWNAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_FCHOWNAT$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_FTRUNCATE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_FTRUNCATE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_FTRUNCATE$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_GETCWD])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_GETCWD])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_GETCWD$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_GETDOMAINNAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_GETDOMAINNAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_GETDOMAINNAME$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_GETDTABLESIZE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_GETDTABLESIZE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_GETDTABLESIZE$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_GETLOGIN_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_GETLOGIN_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_GETLOGIN_R$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_GETGROUPS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_GETGROUPS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_GETGROUPS$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_GETPAGESIZE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_GETPAGESIZE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_GETPAGESIZE$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_ISATTY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_ISATTY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_ISATTY$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_LCHOWN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_LCHOWN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_LCHOWN$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_LINK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_LINK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_LINK$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_LINKAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_LINKAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_LINKAT$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_LSEEK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_LSEEK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_LSEEK$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_PREAD])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_PREAD])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_PREAD$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_PWRITE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_PWRITE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_PWRITE$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_READ])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_READ])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_READ$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_READLINK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_READLINK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_READLINK$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_READLINKAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_READLINKAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_READLINKAT$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_RMDIR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_RMDIR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_RMDIR$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_SLEEP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_SLEEP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_SLEEP$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_SYMLINK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_SYMLINK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_SYMLINK$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_SYMLINKAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_SYMLINKAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_SYMLINKAT$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_TTYNAME_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_TTYNAME_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_TTYNAME_R$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_UNLINK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_UNLINK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_UNLINK$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_UNLINKAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_UNLINKAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_UNLINKAT$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_USLEEP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_USLEEP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_USLEEP$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_WRITE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_WRITE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_WRITE$])
m4trace:configure.ac:20: -1- AC_SUBST([UNISTD_H_HAVE_WINSOCK2_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([UNISTD_H_HAVE_WINSOCK2_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^UNISTD_H_HAVE_WINSOCK2_H$])
m4trace:configure.ac:20: -1- AC_SUBST([UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_GETOPT_H], [/* Define to 1 if you have the <getopt.h> header file. */
@%:@undef HAVE_GETOPT_H])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_GETOPT_H], [AS_VAR_GET(gl_next_header)])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_GETOPT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_GETOPT_H$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_AS_FIRST_DIRECTIVE_GETOPT_H], [$gl_next_as_first_directive])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_AS_FIRST_DIRECTIVE_GETOPT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_GETOPT_H$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_GETOPT_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_GETOPT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_GETOPT_H$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_GETOPT_H], [/* Define to 1 if you have the <getopt.h> header file. */
@%:@undef HAVE_GETOPT_H])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_GETOPT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_GETOPT_H$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_GETOPT_LONG_ONLY], [/* Define to 1 if you have the `getopt_long_only\' function. */
@%:@undef HAVE_GETOPT_LONG_ONLY])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_GETOPT_LONG_ONLY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_GETOPT_LONG_ONLY$])
m4trace:configure.ac:20: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [/usr/src/ports/autoconf2.5/autoconf2.5-2.69-4.noarch/src/autoconf-2.69/lib/autoconf/general.m4:2759: AC_RUN_IFELSE is expanded from...
/usr/src/ports/autoconf2.5/autoconf2.5-2.69-4.noarch/src/autoconf-2.69/lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
/usr/src/ports/autoconf2.5/autoconf2.5-2.69-4.noarch/src/autoconf-2.69/lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
/usr/src/ports/autoconf2.5/autoconf2.5-2.69-4.noarch/src/autoconf-2.69/lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
m4/getopt.m4:48: gl_GETOPT_CHECK_HEADERS is expanded from...
m4/getopt.m4:8: gl_FUNC_GETOPT_POSIX is expanded from...
m4/gnulib-comp.m4:113: gl_INIT is expanded from...
configure.ac:20: the top level])
m4trace:configure.ac:20: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [/usr/src/ports/autoconf2.5/autoconf2.5-2.69-4.noarch/src/autoconf-2.69/lib/autoconf/general.m4:2759: AC_RUN_IFELSE is expanded from...
/usr/src/ports/autoconf2.5/autoconf2.5-2.69-4.noarch/src/autoconf-2.69/lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
/usr/src/ports/autoconf2.5/autoconf2.5-2.69-4.noarch/src/autoconf-2.69/lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
/usr/src/ports/autoconf2.5/autoconf2.5-2.69-4.noarch/src/autoconf-2.69/lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
m4/getopt.m4:48: gl_GETOPT_CHECK_HEADERS is expanded from...
m4/getopt.m4:8: gl_FUNC_GETOPT_POSIX is expanded from...
m4/gnulib-comp.m4:113: gl_INIT is expanded from...
configure.ac:20: the top level])
m4trace:configure.ac:20: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [/usr/src/ports/autoconf2.5/autoconf2.5-2.69-4.noarch/src/autoconf-2.69/lib/autoconf/general.m4:2759: AC_RUN_IFELSE is expanded from...
/usr/src/ports/autoconf2.5/autoconf2.5-2.69-4.noarch/src/autoconf-2.69/lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
/usr/src/ports/autoconf2.5/autoconf2.5-2.69-4.noarch/src/autoconf-2.69/lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
/usr/src/ports/autoconf2.5/autoconf2.5-2.69-4.noarch/src/autoconf-2.69/lib/autoconf/general.m4:2063: AC_CACHE_CHECK is expanded from...
m4/getopt.m4:48: gl_GETOPT_CHECK_HEADERS is expanded from...
m4/getopt.m4:8: gl_FUNC_GETOPT_POSIX is expanded from...
m4/gnulib-comp.m4:113: gl_INIT is expanded from...
configure.ac:20: the top level])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_SYS_CDEFS_H], [/* Define to 1 if you have the <sys/cdefs.h> header file. */
@%:@undef HAVE_SYS_CDEFS_H])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SYS_CDEFS_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SYS_CDEFS_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SYS_CDEFS_H$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([__GETOPT_PREFIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^__GETOPT_PREFIX$])
m4trace:configure.ac:20: -1- AH_OUTPUT([__GETOPT_PREFIX], [/* Define to rpl_ if the getopt replacement functions and variables should be
   used. */
@%:@undef __GETOPT_PREFIX])
m4trace:configure.ac:20: -1- AC_SUBST([GETOPT_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GETOPT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GETOPT_H$])
m4trace:configure.ac:20: -1- AC_SUBST([GETOPT_CDEFS_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GETOPT_CDEFS_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GETOPT_CDEFS_H$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GL_UNISTD_H_GETOPT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GL_UNISTD_H_GETOPT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GL_UNISTD_H_GETOPT$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_GETPROGNAME], [/* Define to 1 if you have the `getprogname\' function. */
@%:@undef HAVE_GETPROGNAME])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_GETEXECNAME], [/* Define to 1 if you have the `getexecname\' function. */
@%:@undef HAVE_GETEXECNAME])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_PROGRAM_INVOCATION_NAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_PROGRAM_INVOCATION_NAME$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_DECL_PROGRAM_INVOCATION_NAME], [/* Define to 1 if you have the declaration of `program_invocation_name\', and
   to 0 if you don\'t. */
@%:@undef HAVE_DECL_PROGRAM_INVOCATION_NAME])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME], [/* Define to 1 if you have the declaration of `program_invocation_short_name\',
   and to 0 if you don\'t. */
@%:@undef HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL___ARGV])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL___ARGV$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_DECL___ARGV], [/* Define to 1 if you have the declaration of `__argv\', and to 0 if you don\'t.
   */
@%:@undef HAVE_DECL___ARGV])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_VAR___PROGNAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_VAR___PROGNAME$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_VAR___PROGNAME], [/* Define if you have a global __progname variable */
@%:@undef HAVE_VAR___PROGNAME])
m4trace:configure.ac:20: -1- AC_SUBST([LIBINTL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([LIBINTL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^LIBINTL$])
m4trace:configure.ac:20: -1- AC_SUBST([LTLIBINTL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([LTLIBINTL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^LTLIBINTL$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_LIMITS_H], [/* Define to 1 if you have the <limits.h> header file. */
@%:@undef HAVE_LIMITS_H])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_LIMITS_H], [AS_VAR_GET(gl_next_header)])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_LIMITS_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_LIMITS_H$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_AS_FIRST_DIRECTIVE_LIMITS_H], [$gl_next_as_first_directive])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_AS_FIRST_DIRECTIVE_LIMITS_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_LIMITS_H$])
m4trace:configure.ac:20: -1- AC_SUBST([LIMITS_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([LIMITS_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^LIMITS_H$])
m4trace:configure.ac:20: -1- AM_CONDITIONAL([GL_GENERATE_LIMITS_H], [test -n "$LIMITS_H"])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_LIMITS_H_TRUE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_LIMITS_H_TRUE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_TRUE$])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_LIMITS_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_LIMITS_H_FALSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_FALSE$])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_TRUE])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB__EXIT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB__EXIT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB__EXIT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_ATOLL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_ATOLL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_ATOLL$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_CALLOC_POSIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_CALLOC_POSIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_CALLOC_POSIX$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_CANONICALIZE_FILE_NAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_CANONICALIZE_FILE_NAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETLOADAVG])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETLOADAVG])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETLOADAVG$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETSUBOPT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETSUBOPT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETSUBOPT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GRANTPT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GRANTPT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GRANTPT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MALLOC_POSIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MALLOC_POSIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MALLOC_POSIX$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBTOWC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBTOWC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBTOWC$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MKDTEMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MKDTEMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MKDTEMP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MKOSTEMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MKOSTEMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MKOSTEMP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MKOSTEMPS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MKOSTEMPS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MKOSTEMPS$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MKSTEMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MKSTEMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MKSTEMP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MKSTEMPS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MKSTEMPS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MKSTEMPS$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_POSIX_OPENPT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_POSIX_OPENPT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_POSIX_OPENPT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_PTSNAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_PTSNAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PTSNAME$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_PTSNAME_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_PTSNAME_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PTSNAME_R$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_PUTENV])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_PUTENV])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PUTENV$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_QSORT_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_QSORT_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_QSORT_R$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_RANDOM])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_RANDOM])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_RANDOM$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_RANDOM_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_RANDOM_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_RANDOM_R$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_REALLOC_POSIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_REALLOC_POSIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_REALLOC_POSIX$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_REALPATH])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_REALPATH])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_REALPATH$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_RPMATCH])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_RPMATCH])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_RPMATCH$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_SECURE_GETENV])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_SECURE_GETENV])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_SECURE_GETENV$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_SETENV])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_SETENV])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_SETENV$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRTOD])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRTOD])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRTOD$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRTOLL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRTOLL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRTOLL$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRTOULL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRTOULL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRTOULL$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_SYSTEM_POSIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_SYSTEM_POSIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_SYSTEM_POSIX$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_UNLOCKPT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_UNLOCKPT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_UNLOCKPT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_UNSETENV])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_UNSETENV])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_UNSETENV$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCTOMB])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCTOMB])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCTOMB$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE__EXIT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE__EXIT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE__EXIT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_ATOLL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_ATOLL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_ATOLL$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_CANONICALIZE_FILE_NAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_CANONICALIZE_FILE_NAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_GETLOADAVG])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_GETLOADAVG])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_GETLOADAVG$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_GETSUBOPT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_GETSUBOPT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_GETSUBOPT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_GRANTPT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_GRANTPT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_GRANTPT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MKDTEMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MKDTEMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MKDTEMP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MKOSTEMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MKOSTEMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MKOSTEMP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MKOSTEMPS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MKOSTEMPS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MKOSTEMPS$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MKSTEMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MKSTEMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MKSTEMP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MKSTEMPS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MKSTEMPS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MKSTEMPS$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_POSIX_OPENPT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_POSIX_OPENPT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_POSIX_OPENPT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_PTSNAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_PTSNAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_PTSNAME$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_PTSNAME_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_PTSNAME_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_PTSNAME_R$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_QSORT_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_QSORT_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_QSORT_R$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_RANDOM])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_RANDOM])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_RANDOM$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_RANDOM_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_RANDOM_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_RANDOM_H$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_RANDOM_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_RANDOM_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_RANDOM_R$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_REALPATH])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_REALPATH])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_REALPATH$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_RPMATCH])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_RPMATCH])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_RPMATCH$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SECURE_GETENV])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SECURE_GETENV])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SECURE_GETENV$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SETENV])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SETENV])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SETENV$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_SETENV])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_SETENV])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_SETENV$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_STRTOD])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_STRTOD])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STRTOD$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_STRTOLL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_STRTOLL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STRTOLL$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_STRTOULL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_STRTOULL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STRTOULL$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_STRUCT_RANDOM_DATA])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_STRUCT_RANDOM_DATA])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STRUCT_RANDOM_DATA$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SYS_LOADAVG_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SYS_LOADAVG_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SYS_LOADAVG_H$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_UNLOCKPT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_UNLOCKPT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_UNLOCKPT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_UNSETENV])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_UNSETENV])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_UNSETENV$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_CALLOC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_CALLOC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_CALLOC$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_CANONICALIZE_FILE_NAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_CANONICALIZE_FILE_NAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_MALLOC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_MALLOC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_MALLOC$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_MBTOWC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_MBTOWC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_MBTOWC$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_MKSTEMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_MKSTEMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_MKSTEMP$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_PTSNAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_PTSNAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_PTSNAME$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_PTSNAME_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_PTSNAME_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_PTSNAME_R$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_PUTENV])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_PUTENV])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_PUTENV$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_QSORT_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_QSORT_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_QSORT_R$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_RANDOM_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_RANDOM_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_RANDOM_R$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_REALLOC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_REALLOC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_REALLOC$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_REALPATH])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_REALPATH])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_REALPATH$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_SETENV])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_SETENV])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_SETENV$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STRTOD])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STRTOD])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STRTOD$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_UNSETENV])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_UNSETENV])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_UNSETENV$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_WCTOMB])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_WCTOMB])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_WCTOMB$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MALLOC_POSIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MALLOC_POSIX$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_MALLOC_POSIX], [/* Define if the \'malloc\' function is POSIX compliant. */
@%:@undef HAVE_MALLOC_POSIX])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([GNULIB_TEST_MALLOC_POSIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_TEST_MALLOC_POSIX$])
m4trace:configure.ac:20: -1- AH_OUTPUT([GNULIB_TEST_MALLOC_POSIX], [/* Define to 1 when the gnulib module malloc-posix should be tested. */
@%:@undef GNULIB_TEST_MALLOC_POSIX])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([MAP_ANONYMOUS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^MAP_ANONYMOUS$])
m4trace:configure.ac:20: -1- AH_OUTPUT([MAP_ANONYMOUS], [/* Define to a substitute value for mmap()\'s MAP_ANONYMOUS flag. */
@%:@undef MAP_ANONYMOUS])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MAP_ANONYMOUS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MAP_ANONYMOUS$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_MAP_ANONYMOUS], [/* Define to 1 if mmap()\'s MAP_ANONYMOUS flag is available after including
   config.h and <sys/mman.h>. */
@%:@undef HAVE_MAP_ANONYMOUS])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_SYS_MMAN_H], [/* Define to 1 if you have the <sys/mman.h> header file. */
@%:@undef HAVE_SYS_MMAN_H])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_MPROTECT], [/* Define to 1 if you have the `mprotect\' function. */
@%:@undef HAVE_MPROTECT])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FFSL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FFSL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FFSL$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FFSLL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FFSLL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FFSLL$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MEMCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MEMCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MEMCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MEMMEM])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MEMMEM])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MEMMEM$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MEMPCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MEMPCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MEMPCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MEMRCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MEMRCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MEMRCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_RAWMEMCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_RAWMEMCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_RAWMEMCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STPCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STPCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STPCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STPNCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STPNCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STPNCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRCHRNUL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRCHRNUL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRCHRNUL$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRDUP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRDUP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRDUP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRNCAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRNCAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRNCAT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRNDUP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRNDUP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRNDUP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRNLEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRNLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRNLEN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRPBRK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRPBRK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRPBRK$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRSEP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRSEP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRSEP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRSTR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRSTR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRSTR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRCASESTR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRCASESTR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRCASESTR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRTOK_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRTOK_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRTOK_R$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSLEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSLEN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSNLEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSNLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSNLEN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSRCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSRCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSRCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSSTR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSSTR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSSTR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSCASECMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSCASECMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSCASECMP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSNCASECMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSNCASECMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSNCASECMP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSPCASECMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSPCASECMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSPCASECMP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSCASESTR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSCASESTR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSCASESTR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSCSPN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSCSPN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSCSPN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSPBRK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSPBRK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSPBRK$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSSPN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSSPN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSSPN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSSEP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSSEP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSSEP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSTOK_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSTOK_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSTOK_R$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRERROR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRERROR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRERROR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRERROR_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRERROR_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRERROR_R$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRSIGNAL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRSIGNAL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRSIGNAL$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STRVERSCMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STRVERSCMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRVERSCMP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MBSLEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MBSLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MBSLEN$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_FFSL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_FFSL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_FFSL$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_FFSLL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_FFSLL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_FFSLL$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MEMCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MEMCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MEMCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_MEMMEM])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_MEMMEM])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_MEMMEM$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MEMPCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MEMPCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MEMPCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_MEMRCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_MEMRCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_MEMRCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_RAWMEMCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_RAWMEMCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_RAWMEMCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_STPCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_STPCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STPCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_STPNCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_STPNCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STPNCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_STRCHRNUL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_STRCHRNUL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STRCHRNUL$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_STRDUP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_STRDUP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_STRDUP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_STRNDUP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_STRNDUP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_STRNDUP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_STRNLEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_STRNLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_STRNLEN$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_STRPBRK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_STRPBRK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STRPBRK$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_STRSEP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_STRSEP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STRSEP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_STRCASESTR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_STRCASESTR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STRCASESTR$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_STRTOK_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_STRTOK_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_STRTOK_R$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_STRERROR_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_STRERROR_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_STRERROR_R$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_STRSIGNAL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_STRSIGNAL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_STRSIGNAL$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_STRVERSCMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_STRVERSCMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STRVERSCMP$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_MEMCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_MEMCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_MEMCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_MEMMEM])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_MEMMEM])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_MEMMEM$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STPNCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STPNCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STPNCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STRDUP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STRDUP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STRDUP$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STRSTR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STRSTR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STRSTR$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STRCASESTR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STRCASESTR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STRCASESTR$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STRCHRNUL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STRCHRNUL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STRCHRNUL$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STRERROR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STRERROR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STRERROR$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STRERROR_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STRERROR_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STRERROR_R$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STRNCAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STRNCAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STRNCAT$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STRNDUP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STRNDUP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STRNDUP$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STRNLEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STRNLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STRNLEN$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STRSIGNAL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STRSIGNAL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STRSIGNAL$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STRTOK_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STRTOK_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STRTOK_R$])
m4trace:configure.ac:20: -1- AC_SUBST([UNDEFINE_STRTOK_R])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([UNDEFINE_STRTOK_R])
m4trace:configure.ac:20: -1- m4_pattern_allow([^UNDEFINE_STRTOK_R$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_BP_SYM_H], [/* Define to 1 if you have the <bp-sym.h> header file. */
@%:@undef HAVE_BP_SYM_H])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_BP_SYM_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_BP_SYM_H$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([GNULIB_TEST_MEMCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_TEST_MEMCHR$])
m4trace:configure.ac:20: -1- AH_OUTPUT([GNULIB_TEST_MEMCHR], [/* Define to 1 when the gnulib module memchr should be tested. */
@%:@undef GNULIB_TEST_MEMCHR])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE__SET_INVALID_PARAMETER_HANDLER], [/* Define to 1 if you have the `_set_invalid_parameter_handler\' function. */
@%:@undef HAVE__SET_INVALID_PARAMETER_HANDLER])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MSVC_INVALID_PARAMETER_HANDLER])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MSVC_INVALID_PARAMETER_HANDLER$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_MSVC_INVALID_PARAMETER_HANDLER], [/* Define to 1 on MSVC platforms that have the "invalid parameter handler"
   concept. */
@%:@undef HAVE_MSVC_INVALID_PARAMETER_HANDLER])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MSVC_INVALID_PARAMETER_HANDLER])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MSVC_INVALID_PARAMETER_HANDLER])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MSVC_INVALID_PARAMETER_HANDLER$])
m4trace:configure.ac:20: -1- AC_SUBST([APPLE_UNIVERSAL_BUILD])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([APPLE_UNIVERSAL_BUILD])
m4trace:configure.ac:20: -1- m4_pattern_allow([^APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_STDINT_H], [/* Define to 1 if you have the <stdint.h> header file. */
@%:@undef HAVE_STDINT_H])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_STDINT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([SIZE_MAX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^SIZE_MAX$])
m4trace:configure.ac:20: -1- AH_OUTPUT([SIZE_MAX], [/* Define as the maximum value of type \'size_t\', if the system doesn\'t define
   it. */
@%:@undef SIZE_MAX])
m4trace:configure.ac:20: -1- AH_OUTPUT([SIZE_MAX], [/* Define as the maximum value of type \'size_t\', if the system doesn\'t define
   it. */
#ifndef SIZE_MAX
# undef SIZE_MAX
#endif])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([ssize_t])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ssize_t$])
m4trace:configure.ac:20: -1- AH_OUTPUT([ssize_t], [/* Define as a signed type of the same size as size_t. */
@%:@undef ssize_t])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_STDARG_H], [AS_VAR_GET(gl_next_header)])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_STDARG_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_STDARG_H$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_AS_FIRST_DIRECTIVE_STDARG_H], [$gl_next_as_first_directive])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_AS_FIRST_DIRECTIVE_STDARG_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDARG_H$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([va_copy])
m4trace:configure.ac:20: -1- m4_pattern_allow([^va_copy$])
m4trace:configure.ac:20: -1- AH_OUTPUT([va_copy], [/* Define as a macro for copying va_list variables. */
@%:@undef va_copy])
m4trace:configure.ac:20: -1- AH_OUTPUT([gl_VA_COPY], [/* A replacement for va_copy, if needed.  */
#define gl_va_copy(a,b) ((a) = (b))])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([va_copy])
m4trace:configure.ac:20: -1- m4_pattern_allow([^va_copy$])
m4trace:configure.ac:20: -1- AH_OUTPUT([va_copy], [/* Define as a macro for copying va_list variables. */
@%:@undef va_copy])
m4trace:configure.ac:20: -1- AC_SUBST([STDARG_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([STDARG_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^STDARG_H$])
m4trace:configure.ac:20: -1- AM_CONDITIONAL([GL_GENERATE_STDARG_H], [test -n "$STDARG_H"])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_STDARG_H_TRUE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_STDARG_H_TRUE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_STDARG_H_TRUE$])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_STDARG_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_STDARG_H_FALSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_STDARG_H_FALSE$])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDARG_H_TRUE])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDARG_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_STDARG_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_STDARG_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_STDARG_H$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE__BOOL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE__BOOL$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE__BOOL], [/* Define to 1 if the system has the type `_Bool\'. */
@%:@undef HAVE__BOOL])
m4trace:configure.ac:20: -1- AC_SUBST([STDBOOL_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([STDBOOL_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^STDBOOL_H$])
m4trace:configure.ac:20: -1- AM_CONDITIONAL([GL_GENERATE_STDBOOL_H], [test -n "$STDBOOL_H"])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_STDBOOL_H_TRUE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_STDBOOL_H_TRUE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_STDBOOL_H_TRUE$])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_STDBOOL_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_STDBOOL_H_FALSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_STDBOOL_H_FALSE$])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDBOOL_H_TRUE])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDBOOL_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE__BOOL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE__BOOL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE__BOOL$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_NULL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_NULL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_NULL$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MAX_ALIGN_T])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MAX_ALIGN_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MAX_ALIGN_T$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCHAR_T])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCHAR_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCHAR_T$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_WCHAR_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCHAR_T$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_WCHAR_T], [/* Define if you have the \'wchar_t\' type. */
@%:@undef HAVE_WCHAR_T])
m4trace:configure.ac:20: -1- AC_SUBST([STDDEF_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([STDDEF_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^STDDEF_H$])
m4trace:configure.ac:20: -1- AM_CONDITIONAL([GL_GENERATE_STDDEF_H], [test -n "$STDDEF_H"])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_STDDEF_H_TRUE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_STDDEF_H_TRUE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_STDDEF_H_TRUE$])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_STDDEF_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_STDDEF_H_FALSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_STDDEF_H_FALSE$])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDDEF_H_TRUE])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDDEF_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_STDDEF_H], [AS_VAR_GET(gl_next_header)])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_STDDEF_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_STDDEF_H$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_AS_FIRST_DIRECTIVE_STDDEF_H], [$gl_next_as_first_directive])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_AS_FIRST_DIRECTIVE_STDDEF_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDDEF_H$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_WINT_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WINT_T$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_WINT_T], [/* Define if you have the \'wint_t\' type. */
@%:@undef HAVE_WINT_T])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_OVERRIDES_WINT_T])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_OVERRIDES_WINT_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_OVERRIDES_WINT_T$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_UNSIGNED_LONG_LONG_INT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_UNSIGNED_LONG_LONG_INT$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_UNSIGNED_LONG_LONG_INT], [/* Define to 1 if the system has the type \'unsigned long long int\'. */
@%:@undef HAVE_UNSIGNED_LONG_LONG_INT])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LONG_LONG_INT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_LONG_LONG_INT$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_LONG_LONG_INT], [/* Define to 1 if the system has the type \'long long int\'. */
@%:@undef HAVE_LONG_LONG_INT])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_LONG_LONG_INT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_LONG_LONG_INT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_LONG_LONG_INT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_UNSIGNED_LONG_LONG_INT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_UNSIGNED_LONG_LONG_INT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_UNSIGNED_LONG_LONG_INT$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_WCHAR_H], [/* Define to 1 if you have the <wchar.h> header file. */
@%:@undef HAVE_WCHAR_H])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCHAR_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCHAR_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_INTTYPES_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_INTTYPES_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_INTTYPES_H$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SYS_TYPES_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SYS_TYPES_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SYS_TYPES_H$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_STDINT_H], [/* Define to 1 if you have the <stdint.h> header file. */
@%:@undef HAVE_STDINT_H])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_STDINT_H], [AS_VAR_GET(gl_next_header)])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_STDINT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_STDINT_H$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_AS_FIRST_DIRECTIVE_STDINT_H], [$gl_next_as_first_directive])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_AS_FIRST_DIRECTIVE_STDINT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDINT_H$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_STDINT_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_STDINT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([__STDC_CONSTANT_MACROS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^__STDC_CONSTANT_MACROS$])
m4trace:configure.ac:20: -1- AH_OUTPUT([__STDC_CONSTANT_MACROS], [/* Define to 1 if the system <stdint.h> predates C++11. */
@%:@undef __STDC_CONSTANT_MACROS])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([__STDC_LIMIT_MACROS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^__STDC_LIMIT_MACROS$])
m4trace:configure.ac:20: -1- AH_OUTPUT([__STDC_LIMIT_MACROS], [/* Define to 1 if the system <stdint.h> predates C++11. */
@%:@undef __STDC_LIMIT_MACROS])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_SYS_INTTYPES_H], [/* Define to 1 if you have the <sys/inttypes.h> header file. */
@%:@undef HAVE_SYS_INTTYPES_H])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_SYS_BITYPES_H], [/* Define to 1 if you have the <sys/bitypes.h> header file. */
@%:@undef HAVE_SYS_BITYPES_H])
m4trace:configure.ac:20: -1- AH_OUTPUT([BITSIZEOF_PTRDIFF_T], [/* Define to the number of bits in type \'ptrdiff_t\'. */
@%:@undef BITSIZEOF_PTRDIFF_T])
m4trace:configure.ac:20: -1- AH_OUTPUT([BITSIZEOF_SIZE_T], [/* Define to the number of bits in type \'size_t\'. */
@%:@undef BITSIZEOF_SIZE_T])
m4trace:configure.ac:20: -1- AC_SUBST([BITSIZEOF_PTRDIFF_T])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([BITSIZEOF_PTRDIFF_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^BITSIZEOF_PTRDIFF_T$])
m4trace:configure.ac:20: -1- AC_SUBST([BITSIZEOF_SIZE_T])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([BITSIZEOF_SIZE_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^BITSIZEOF_SIZE_T$])
m4trace:configure.ac:20: -1- AH_OUTPUT([BITSIZEOF_SIG_ATOMIC_T], [/* Define to the number of bits in type \'sig_atomic_t\'. */
@%:@undef BITSIZEOF_SIG_ATOMIC_T])
m4trace:configure.ac:20: -1- AH_OUTPUT([BITSIZEOF_WCHAR_T], [/* Define to the number of bits in type \'wchar_t\'. */
@%:@undef BITSIZEOF_WCHAR_T])
m4trace:configure.ac:20: -1- AH_OUTPUT([BITSIZEOF_WINT_T], [/* Define to the number of bits in type \'wint_t\'. */
@%:@undef BITSIZEOF_WINT_T])
m4trace:configure.ac:20: -1- AC_SUBST([BITSIZEOF_SIG_ATOMIC_T])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([BITSIZEOF_SIG_ATOMIC_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^BITSIZEOF_SIG_ATOMIC_T$])
m4trace:configure.ac:20: -1- AC_SUBST([BITSIZEOF_WCHAR_T])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([BITSIZEOF_WCHAR_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^BITSIZEOF_WCHAR_T$])
m4trace:configure.ac:20: -1- AC_SUBST([BITSIZEOF_WINT_T])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([BITSIZEOF_WINT_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^BITSIZEOF_WINT_T$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_SIGNED_SIG_ATOMIC_T], [/* Define to 1 if \'sig_atomic_t\' is a signed integer type. */
@%:@undef HAVE_SIGNED_SIG_ATOMIC_T])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_SIGNED_WCHAR_T], [/* Define to 1 if \'wchar_t\' is a signed integer type. */
@%:@undef HAVE_SIGNED_WCHAR_T])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_SIGNED_WINT_T], [/* Define to 1 if \'wint_t\' is a signed integer type. */
@%:@undef HAVE_SIGNED_WINT_T])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SIGNED_SIG_ATOMIC_T])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SIGNED_SIG_ATOMIC_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SIGNED_SIG_ATOMIC_T$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SIGNED_WCHAR_T])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SIGNED_WCHAR_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SIGNED_WCHAR_T$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SIGNED_WINT_T])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SIGNED_WINT_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SIGNED_WINT_T$])
m4trace:configure.ac:20: -1- AH_OUTPUT([PTRDIFF_T_SUFFIX], [/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type
   \'ptrdiff_t\'. */
@%:@undef PTRDIFF_T_SUFFIX])
m4trace:configure.ac:20: -1- AH_OUTPUT([SIZE_T_SUFFIX], [/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type
   \'size_t\'. */
@%:@undef SIZE_T_SUFFIX])
m4trace:configure.ac:20: -1- AC_SUBST([PTRDIFF_T_SUFFIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([PTRDIFF_T_SUFFIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PTRDIFF_T_SUFFIX$])
m4trace:configure.ac:20: -1- AC_SUBST([SIZE_T_SUFFIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([SIZE_T_SUFFIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^SIZE_T_SUFFIX$])
m4trace:configure.ac:20: -1- AH_OUTPUT([SIG_ATOMIC_T_SUFFIX], [/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type
   \'sig_atomic_t\'. */
@%:@undef SIG_ATOMIC_T_SUFFIX])
m4trace:configure.ac:20: -1- AH_OUTPUT([WCHAR_T_SUFFIX], [/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type
   \'wchar_t\'. */
@%:@undef WCHAR_T_SUFFIX])
m4trace:configure.ac:20: -1- AH_OUTPUT([WINT_T_SUFFIX], [/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type
   \'wint_t\'. */
@%:@undef WINT_T_SUFFIX])
m4trace:configure.ac:20: -1- AC_SUBST([SIG_ATOMIC_T_SUFFIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([SIG_ATOMIC_T_SUFFIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^SIG_ATOMIC_T_SUFFIX$])
m4trace:configure.ac:20: -1- AC_SUBST([WCHAR_T_SUFFIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([WCHAR_T_SUFFIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^WCHAR_T_SUFFIX$])
m4trace:configure.ac:20: -1- AC_SUBST([WINT_T_SUFFIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([WINT_T_SUFFIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^WINT_T_SUFFIX$])
m4trace:configure.ac:20: -1- AM_CONDITIONAL([GL_GENERATE_LIMITS_H], [test -n "$LIMITS_H"])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_LIMITS_H_TRUE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_LIMITS_H_TRUE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_TRUE$])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_LIMITS_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_LIMITS_H_FALSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_FALSE$])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_TRUE])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_C99_STDINT_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_C99_STDINT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_C99_STDINT_H$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SYS_BITYPES_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SYS_BITYPES_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SYS_BITYPES_H$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_SYS_INTTYPES_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_SYS_INTTYPES_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SYS_INTTYPES_H$])
m4trace:configure.ac:20: -1- AC_SUBST([STDINT_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([STDINT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^STDINT_H$])
m4trace:configure.ac:20: -1- AM_CONDITIONAL([GL_GENERATE_STDINT_H], [test -n "$STDINT_H"])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_STDINT_H_TRUE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_STDINT_H_TRUE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_STDINT_H_TRUE$])
m4trace:configure.ac:20: -1- AC_SUBST([GL_GENERATE_STDINT_H_FALSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GL_GENERATE_STDINT_H_FALSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GL_GENERATE_STDINT_H_FALSE$])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDINT_H_TRUE])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDINT_H_FALSE])
m4trace:configure.ac:20: -1- AH_OUTPUT([MINGW_ANSI_STDIO], [/* Use GNU style printf and scanf.  */
#ifndef __USE_MINGW_ANSI_STDIO
# undef __USE_MINGW_ANSI_STDIO
#endif
])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([__USE_MINGW_ANSI_STDIO])
m4trace:configure.ac:20: -1- m4_pattern_allow([^__USE_MINGW_ANSI_STDIO$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_DPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_DPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_DPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FCLOSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FCLOSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FCLOSE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FDOPEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FDOPEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FDOPEN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FFLUSH])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FFLUSH])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FFLUSH$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FGETC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FGETC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FGETC$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FGETS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FGETS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FGETS$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FOPEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FOPEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FOPEN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FPRINTF_POSIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FPRINTF_POSIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FPRINTF_POSIX$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FPURGE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FPURGE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FPURGE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FPUTC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FPUTC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FPUTC$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FPUTS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FPUTS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FPUTS$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FREAD])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FREAD])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FREAD$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FREOPEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FREOPEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FREOPEN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FSCANF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FSCANF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FSCANF$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FSEEK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FSEEK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FSEEK$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FSEEKO])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FSEEKO])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FSEEKO$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FTELL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FTELL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FTELL$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FTELLO])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FTELLO])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FTELLO$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_FWRITE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_FWRITE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FWRITE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETC$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETCHAR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETCHAR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETCHAR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETDELIM])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETDELIM])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETDELIM$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_GETLINE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_GETLINE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_GETLINE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_OBSTACK_PRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_OBSTACK_PRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_OBSTACK_PRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_OBSTACK_PRINTF_POSIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_OBSTACK_PRINTF_POSIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_OBSTACK_PRINTF_POSIX$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_PCLOSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_PCLOSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PCLOSE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_PERROR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_PERROR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PERROR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_POPEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_POPEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_POPEN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_PRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_PRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_PRINTF_POSIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_PRINTF_POSIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PRINTF_POSIX$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_PUTC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_PUTC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PUTC$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_PUTCHAR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_PUTCHAR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PUTCHAR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_PUTS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_PUTS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PUTS$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_REMOVE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_REMOVE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_REMOVE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_RENAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_RENAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_RENAME$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_RENAMEAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_RENAMEAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_RENAMEAT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_SCANF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_SCANF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_SCANF$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_SNPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_SNPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_SNPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_SPRINTF_POSIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_SPRINTF_POSIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_SPRINTF_POSIX$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STDIO_H_NONBLOCKING])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STDIO_H_NONBLOCKING])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STDIO_H_NONBLOCKING$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_STDIO_H_SIGPIPE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_STDIO_H_SIGPIPE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STDIO_H_SIGPIPE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_TMPFILE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_TMPFILE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_TMPFILE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_VASPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_VASPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_VASPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_VFSCANF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_VFSCANF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_VFSCANF$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_VSCANF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_VSCANF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_VSCANF$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_VDPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_VDPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_VDPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_VFPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_VFPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_VFPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_VFPRINTF_POSIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_VFPRINTF_POSIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_VFPRINTF_POSIX$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_VPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_VPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_VPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_VPRINTF_POSIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_VPRINTF_POSIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_VPRINTF_POSIX$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_VSNPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_VSNPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_VSNPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_VSPRINTF_POSIX])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_VSPRINTF_POSIX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_VSPRINTF_POSIX$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_FPURGE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_FPURGE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_FPURGE$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_FSEEKO])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_FSEEKO])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_FSEEKO$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_FTELLO])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_FTELLO])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_FTELLO$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_GETDELIM])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_GETDELIM])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_GETDELIM$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_GETLINE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_GETLINE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_GETLINE$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_OBSTACK_PRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_OBSTACK_PRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_OBSTACK_PRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_SNPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_SNPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_SNPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_VSNPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_VSNPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_VSNPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_FSEEKO])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_FSEEKO])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_FSEEKO$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_FTELLO])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_FTELLO])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_FTELLO$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_PCLOSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_PCLOSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_PCLOSE$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_POPEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_POPEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_POPEN$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_RENAMEAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_RENAMEAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_RENAMEAT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_VASPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_VASPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_VASPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_VDPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_VDPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_VDPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_DPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_DPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_DPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_FCLOSE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_FCLOSE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_FCLOSE$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_FDOPEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_FDOPEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_FDOPEN$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_FFLUSH])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_FFLUSH])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_FFLUSH$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_FOPEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_FOPEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_FOPEN$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_FPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_FPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_FPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_FPURGE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_FPURGE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_FPURGE$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_FREOPEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_FREOPEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_FREOPEN$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_FSEEK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_FSEEK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_FSEEK$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_FSEEKO])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_FSEEKO])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_FSEEKO$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_FTELL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_FTELL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_FTELL$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_FTELLO])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_FTELLO])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_FTELLO$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_GETDELIM])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_GETDELIM])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_GETDELIM$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_GETLINE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_GETLINE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_GETLINE$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_OBSTACK_PRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_OBSTACK_PRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_OBSTACK_PRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_PERROR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_PERROR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_PERROR$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_POPEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_POPEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_POPEN$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_PRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_PRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_PRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_REMOVE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_REMOVE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_REMOVE$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_RENAME])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_RENAME])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_RENAME$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_RENAMEAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_RENAMEAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_RENAMEAT$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_SNPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_SNPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_SNPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_SPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_SPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_SPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STDIO_READ_FUNCS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STDIO_READ_FUNCS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STDIO_READ_FUNCS$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_STDIO_WRITE_FUNCS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_STDIO_WRITE_FUNCS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STDIO_WRITE_FUNCS$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_TMPFILE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_TMPFILE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_TMPFILE$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_VASPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_VASPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_VASPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_VDPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_VDPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_VDPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_VFPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_VFPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_VFPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_VPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_VPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_VPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_VSNPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_VSNPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_VSNPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_VSPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_VSPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_VSPRINTF$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_STDIO_H], [AS_VAR_GET(gl_next_header)])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_STDIO_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_STDIO_H$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_AS_FIRST_DIRECTIVE_STDIO_H], [$gl_next_as_first_directive])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_AS_FIRST_DIRECTIVE_STDIO_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDIO_H$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([GNULIB_PRINTF_ATTRIBUTE_FLAVOR_GNU])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_PRINTF_ATTRIBUTE_FLAVOR_GNU$])
m4trace:configure.ac:20: -1- AH_OUTPUT([GNULIB_PRINTF_ATTRIBUTE_FLAVOR_GNU], [/* Define to 1 if printf and friends should be labeled with attribute
   "__gnu_printf__" instead of "__printf__" */
@%:@undef GNULIB_PRINTF_ATTRIBUTE_FLAVOR_GNU])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([GNULIB_FSCANF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_FSCANF$])
m4trace:configure.ac:20: -1- AH_OUTPUT([GNULIB_FSCANF], [/* Define to a C preprocessor expression that evaluates to 1 or 0, depending
   whether the gnulib module fscanf shall be considered present. */
@%:@undef GNULIB_FSCANF])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([GNULIB_SCANF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_SCANF$])
m4trace:configure.ac:20: -1- AH_OUTPUT([GNULIB_SCANF], [/* Define to a C preprocessor expression that evaluates to 1 or 0, depending
   whether the gnulib module scanf shall be considered present. */
@%:@undef GNULIB_SCANF])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_DPRINTF], [/* Define to 1 if dprintf is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_DPRINTF])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_FPURGE], [/* Define to 1 if fpurge is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_FPURGE])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_FSEEKO], [/* Define to 1 if fseeko is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_FSEEKO])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_FTELLO], [/* Define to 1 if ftello is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_FTELLO])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GETDELIM], [/* Define to 1 if getdelim is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GETDELIM])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GETLINE], [/* Define to 1 if getline is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GETLINE])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GETS], [/* Define to 1 if gets is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GETS])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_PCLOSE], [/* Define to 1 if pclose is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_PCLOSE])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_POPEN], [/* Define to 1 if popen is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_POPEN])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_RENAMEAT], [/* Define to 1 if renameat is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_RENAMEAT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_SNPRINTF], [/* Define to 1 if snprintf is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_SNPRINTF])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_TMPFILE], [/* Define to 1 if tmpfile is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_TMPFILE])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_VDPRINTF], [/* Define to 1 if vdprintf is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_VDPRINTF])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_VSNPRINTF], [/* Define to 1 if vsnprintf is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_VSNPRINTF])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_STDLIB_H], [AS_VAR_GET(gl_next_header)])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_STDLIB_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_STDLIB_H$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_AS_FIRST_DIRECTIVE_STDLIB_H], [$gl_next_as_first_directive])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_AS_FIRST_DIRECTIVE_STDLIB_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDLIB_H$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL__EXIT], [/* Define to 1 if _Exit is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL__EXIT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_ATOLL], [/* Define to 1 if atoll is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_ATOLL])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_CANONICALIZE_FILE_NAME], [/* Define to 1 if canonicalize_file_name is declared even after undefining
   macros. */
@%:@undef HAVE_RAW_DECL_CANONICALIZE_FILE_NAME])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GETLOADAVG], [/* Define to 1 if getloadavg is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GETLOADAVG])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GETSUBOPT], [/* Define to 1 if getsubopt is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GETSUBOPT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GRANTPT], [/* Define to 1 if grantpt is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GRANTPT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_INITSTATE], [/* Define to 1 if initstate is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_INITSTATE])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_INITSTATE_R], [/* Define to 1 if initstate_r is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_INITSTATE_R])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_MKDTEMP], [/* Define to 1 if mkdtemp is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_MKDTEMP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_MKOSTEMP], [/* Define to 1 if mkostemp is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_MKOSTEMP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_MKOSTEMPS], [/* Define to 1 if mkostemps is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_MKOSTEMPS])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_MKSTEMP], [/* Define to 1 if mkstemp is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_MKSTEMP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_MKSTEMPS], [/* Define to 1 if mkstemps is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_MKSTEMPS])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_POSIX_OPENPT], [/* Define to 1 if posix_openpt is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_POSIX_OPENPT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_PTSNAME], [/* Define to 1 if ptsname is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_PTSNAME])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_PTSNAME_R], [/* Define to 1 if ptsname_r is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_PTSNAME_R])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_QSORT_R], [/* Define to 1 if qsort_r is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_QSORT_R])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_RANDOM], [/* Define to 1 if random is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_RANDOM])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_RANDOM_R], [/* Define to 1 if random_r is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_RANDOM_R])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_REALPATH], [/* Define to 1 if realpath is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_REALPATH])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_RPMATCH], [/* Define to 1 if rpmatch is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_RPMATCH])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_SECURE_GETENV], [/* Define to 1 if secure_getenv is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_SECURE_GETENV])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_SETENV], [/* Define to 1 if setenv is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_SETENV])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_SETSTATE], [/* Define to 1 if setstate is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_SETSTATE])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_SETSTATE_R], [/* Define to 1 if setstate_r is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_SETSTATE_R])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_SRANDOM], [/* Define to 1 if srandom is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_SRANDOM])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_SRANDOM_R], [/* Define to 1 if srandom_r is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_SRANDOM_R])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRTOD], [/* Define to 1 if strtod is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRTOD])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRTOLL], [/* Define to 1 if strtoll is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRTOLL])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRTOULL], [/* Define to 1 if strtoull is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRTOULL])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_UNLOCKPT], [/* Define to 1 if unlockpt is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_UNLOCKPT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_UNSETENV], [/* Define to 1 if unsetenv is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_UNSETENV])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([REPLACE_STRERROR_0])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_STRERROR_0$])
m4trace:configure.ac:20: -1- AH_OUTPUT([REPLACE_STRERROR_0], [/* Define to 1 if strerror(0) does not return a message implying success. */
@%:@undef REPLACE_STRERROR_0])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([GNULIB_STRERROR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_STRERROR$])
m4trace:configure.ac:20: -1- AH_OUTPUT([GNULIB_STRERROR], [/* Define to a C preprocessor expression that evaluates to 1 or 0, depending
   whether the gnulib module strerror shall be considered present. */
@%:@undef GNULIB_STRERROR])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([GNULIB_TEST_STRERROR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_TEST_STRERROR$])
m4trace:configure.ac:20: -1- AH_OUTPUT([GNULIB_TEST_STRERROR], [/* Define to 1 when the gnulib module strerror should be tested. */
@%:@undef GNULIB_TEST_STRERROR])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_SYS_SOCKET_H], [/* Define to 1 if you have the <sys/socket.h> header file. */
@%:@undef HAVE_SYS_SOCKET_H])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_WINSOCK2_H], [/* Define to 1 if you have the <winsock2.h> header file. */
@%:@undef HAVE_WINSOCK2_H])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_WINSOCK2_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WINSOCK2_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WINSOCK2_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:20: -1- AH_OUTPUT([restrict], [/* Define to the equivalent of the C99 \'restrict\' keyword, or to
   nothing if this is not supported.  Do not define if restrict is
   supported directly.  */
#undef restrict
/* Work around a bug in Sun C++: it does not support _Restrict or
   __restrict__, even though the corresponding Sun C compiler ends up with
   "#define restrict _Restrict" or "#define restrict __restrict__" in the
   previous line.  Perhaps some future version of Sun C++ will work with
   restrict; if so, hopefully it defines __RESTRICT like Sun C does.  */
#if defined __SUNPRO_CC && !defined __RESTRICT
# define _Restrict
# define __restrict__
#endif])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([restrict])
m4trace:configure.ac:20: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([restrict])
m4trace:configure.ac:20: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_STRING_H], [AS_VAR_GET(gl_next_header)])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_STRING_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_STRING_H$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_AS_FIRST_DIRECTIVE_STRING_H], [$gl_next_as_first_directive])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_AS_FIRST_DIRECTIVE_STRING_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STRING_H$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_FFSL], [/* Define to 1 if ffsl is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_FFSL])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_FFSLL], [/* Define to 1 if ffsll is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_FFSLL])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_MEMMEM], [/* Define to 1 if memmem is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_MEMMEM])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_MEMPCPY], [/* Define to 1 if mempcpy is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_MEMPCPY])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_MEMRCHR], [/* Define to 1 if memrchr is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_MEMRCHR])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_RAWMEMCHR], [/* Define to 1 if rawmemchr is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_RAWMEMCHR])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STPCPY], [/* Define to 1 if stpcpy is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STPCPY])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STPNCPY], [/* Define to 1 if stpncpy is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STPNCPY])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRCHRNUL], [/* Define to 1 if strchrnul is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRCHRNUL])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRDUP], [/* Define to 1 if strdup is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRDUP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRNCAT], [/* Define to 1 if strncat is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRNCAT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRNDUP], [/* Define to 1 if strndup is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRNDUP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRNLEN], [/* Define to 1 if strnlen is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRNLEN])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRPBRK], [/* Define to 1 if strpbrk is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRPBRK])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRSEP], [/* Define to 1 if strsep is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRSEP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRCASESTR], [/* Define to 1 if strcasestr is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRCASESTR])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRTOK_R], [/* Define to 1 if strtok_r is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRTOK_R])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRERROR_R], [/* Define to 1 if strerror_r is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRERROR_R])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRSIGNAL], [/* Define to 1 if strsignal is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRSIGNAL])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_STRVERSCMP], [/* Define to 1 if strverscmp is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_STRVERSCMP])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_STRNDUP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_STRNDUP$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_DECL_STRNDUP], [/* Define to 1 if you have the declaration of `strndup\', and to 0 if you
   don\'t. */
@%:@undef HAVE_DECL_STRNDUP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_STRNDUP], [/* Define to 1 if you have the `strndup\' function. */
@%:@undef HAVE_STRNDUP])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([GNULIB_TEST_STRNDUP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_TEST_STRNDUP$])
m4trace:configure.ac:20: -1- AH_OUTPUT([GNULIB_TEST_STRNDUP], [/* Define to 1 when the gnulib module strndup should be tested. */
@%:@undef GNULIB_TEST_STRNDUP])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_STRNLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_STRNLEN$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_DECL_STRNLEN], [/* Define to 1 if you have the declaration of `strnlen\', and to 0 if you
   don\'t. */
@%:@undef HAVE_DECL_STRNLEN])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([GNULIB_TEST_STRNLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_TEST_STRNLEN$])
m4trace:configure.ac:20: -1- AH_OUTPUT([GNULIB_TEST_STRNLEN], [/* Define to 1 when the gnulib module strnlen should be tested. */
@%:@undef GNULIB_TEST_STRNLEN])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_SYS_TYPES_H], [AS_VAR_GET(gl_next_header)])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_SYS_TYPES_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_SYS_TYPES_H$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_AS_FIRST_DIRECTIVE_SYS_TYPES_H], [$gl_next_as_first_directive])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_AS_FIRST_DIRECTIVE_SYS_TYPES_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_TYPES_H$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([pid_t])
m4trace:configure.ac:20: -1- m4_pattern_allow([^pid_t$])
m4trace:configure.ac:20: -1- AH_OUTPUT([pid_t], [/* Define to `int\' if <sys/types.h> does not define. */
@%:@undef pid_t])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([mode_t])
m4trace:configure.ac:20: -1- m4_pattern_allow([^mode_t$])
m4trace:configure.ac:20: -1- AH_OUTPUT([mode_t], [/* Define to `int\' if <sys/types.h> does not define. */
@%:@undef mode_t])
m4trace:configure.ac:20: -1- AC_SUBST([WINDOWS_64_BIT_OFF_T])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([WINDOWS_64_BIT_OFF_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^WINDOWS_64_BIT_OFF_T$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_UNISTD_H], [/* Define to 1 if you have the <unistd.h> header file. */
@%:@undef HAVE_UNISTD_H])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_UNISTD_H], [AS_VAR_GET(gl_next_header)])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_UNISTD_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_UNISTD_H$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_AS_FIRST_DIRECTIVE_UNISTD_H], [$gl_next_as_first_directive])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_AS_FIRST_DIRECTIVE_UNISTD_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_UNISTD_H$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_UNISTD_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_UNISTD_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_UNISTD_H$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_CHDIR], [/* Define to 1 if chdir is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_CHDIR])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_CHOWN], [/* Define to 1 if chown is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_CHOWN])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_DUP], [/* Define to 1 if dup is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_DUP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_DUP2], [/* Define to 1 if dup2 is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_DUP2])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_DUP3], [/* Define to 1 if dup3 is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_DUP3])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_ENVIRON], [/* Define to 1 if environ is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_ENVIRON])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_EUIDACCESS], [/* Define to 1 if euidaccess is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_EUIDACCESS])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_FACCESSAT], [/* Define to 1 if faccessat is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_FACCESSAT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_FCHDIR], [/* Define to 1 if fchdir is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_FCHDIR])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_FCHOWNAT], [/* Define to 1 if fchownat is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_FCHOWNAT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_FDATASYNC], [/* Define to 1 if fdatasync is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_FDATASYNC])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_FSYNC], [/* Define to 1 if fsync is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_FSYNC])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_FTRUNCATE], [/* Define to 1 if ftruncate is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_FTRUNCATE])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GETCWD], [/* Define to 1 if getcwd is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GETCWD])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GETDOMAINNAME], [/* Define to 1 if getdomainname is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GETDOMAINNAME])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GETDTABLESIZE], [/* Define to 1 if getdtablesize is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GETDTABLESIZE])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GETGROUPS], [/* Define to 1 if getgroups is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GETGROUPS])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GETHOSTNAME], [/* Define to 1 if gethostname is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GETHOSTNAME])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GETLOGIN], [/* Define to 1 if getlogin is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GETLOGIN])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GETLOGIN_R], [/* Define to 1 if getlogin_r is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GETLOGIN_R])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GETPAGESIZE], [/* Define to 1 if getpagesize is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GETPAGESIZE])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GETUSERSHELL], [/* Define to 1 if getusershell is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GETUSERSHELL])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_SETUSERSHELL], [/* Define to 1 if setusershell is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_SETUSERSHELL])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_ENDUSERSHELL], [/* Define to 1 if endusershell is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_ENDUSERSHELL])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_GROUP_MEMBER], [/* Define to 1 if group_member is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_GROUP_MEMBER])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_ISATTY], [/* Define to 1 if isatty is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_ISATTY])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_LCHOWN], [/* Define to 1 if lchown is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_LCHOWN])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_LINK], [/* Define to 1 if link is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_LINK])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_LINKAT], [/* Define to 1 if linkat is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_LINKAT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_LSEEK], [/* Define to 1 if lseek is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_LSEEK])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_PIPE], [/* Define to 1 if pipe is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_PIPE])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_PIPE2], [/* Define to 1 if pipe2 is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_PIPE2])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_PREAD], [/* Define to 1 if pread is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_PREAD])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_PWRITE], [/* Define to 1 if pwrite is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_PWRITE])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_READLINK], [/* Define to 1 if readlink is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_READLINK])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_READLINKAT], [/* Define to 1 if readlinkat is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_READLINKAT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_RMDIR], [/* Define to 1 if rmdir is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_RMDIR])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_SETHOSTNAME], [/* Define to 1 if sethostname is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_SETHOSTNAME])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_SLEEP], [/* Define to 1 if sleep is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_SLEEP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_SYMLINK], [/* Define to 1 if symlink is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_SYMLINK])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_SYMLINKAT], [/* Define to 1 if symlinkat is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_SYMLINKAT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_TTYNAME_R], [/* Define to 1 if ttyname_r is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_TTYNAME_R])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_UNLINK], [/* Define to 1 if unlink is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_UNLINK])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_UNLINKAT], [/* Define to 1 if unlinkat is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_UNLINKAT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_USLEEP], [/* Define to 1 if usleep is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_USLEEP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_VASNPRINTF], [/* Define to 1 if you have the `vasnprintf\' function. */
@%:@undef HAVE_VASNPRINTF])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_VASNPRINTF], [/* Define to 1 if you have the `vasnprintf\' function. */
@%:@undef HAVE_VASNPRINTF])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([REPLACE_VASNPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_VASNPRINTF$])
m4trace:configure.ac:20: -1- AH_OUTPUT([REPLACE_VASNPRINTF], [/* Define if vasnprintf exists but is overridden by gnulib. */
@%:@undef REPLACE_VASNPRINTF])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_FEATURES_H], [/* Define to 1 if you have the <features.h> header file. */
@%:@undef HAVE_FEATURES_H])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_FEATURES_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_FEATURES_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_FEATURES_H$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([ptrdiff_t])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ptrdiff_t$])
m4trace:configure.ac:20: -1- AH_OUTPUT([ptrdiff_t], [/* Define as the type of the result of subtracting two pointers, if the system
   doesn\'t define it. */
@%:@undef ptrdiff_t])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_INTTYPES_H_WITH_UINTMAX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_INTTYPES_H_WITH_UINTMAX$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_INTTYPES_H_WITH_UINTMAX], [/* Define if <inttypes.h> exists, doesn\'t clash with <sys/types.h>, and
   declares uintmax_t. */
@%:@undef HAVE_INTTYPES_H_WITH_UINTMAX])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_STDINT_H_WITH_UINTMAX])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STDINT_H_WITH_UINTMAX$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_STDINT_H_WITH_UINTMAX], [/* Define if <stdint.h> exists, doesn\'t clash with <sys/types.h>, and declares
   uintmax_t. */
@%:@undef HAVE_STDINT_H_WITH_UINTMAX])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_INTMAX_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_INTMAX_T$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_INTMAX_T], [/* Define if you have the \'intmax_t\' type in <stdint.h> or <inttypes.h>. */
@%:@undef HAVE_INTMAX_T])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([intmax_t])
m4trace:configure.ac:20: -1- m4_pattern_allow([^intmax_t$])
m4trace:configure.ac:20: -1- AH_OUTPUT([intmax_t], [/* Define to long or long long if <stdint.h> and <inttypes.h> don\'t define. */
@%:@undef intmax_t])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_SNPRINTF], [/* Define to 1 if you have the `snprintf\' function. */
@%:@undef HAVE_SNPRINTF])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_STRNLEN], [/* Define to 1 if you have the `strnlen\' function. */
@%:@undef HAVE_STRNLEN])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_WCSLEN], [/* Define to 1 if you have the `wcslen\' function. */
@%:@undef HAVE_WCSLEN])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_WCSNLEN], [/* Define to 1 if you have the `wcsnlen\' function. */
@%:@undef HAVE_WCSNLEN])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_MBRTOWC], [/* Define to 1 if you have the `mbrtowc\' function. */
@%:@undef HAVE_MBRTOWC])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_WCRTOMB], [/* Define to 1 if you have the `wcrtomb\' function. */
@%:@undef HAVE_WCRTOMB])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL__SNPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL__SNPRINTF$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_DECL__SNPRINTF], [/* Define to 1 if you have the declaration of `_snprintf\', and to 0 if you
   don\'t. */
@%:@undef HAVE_DECL__SNPRINTF])
m4trace:configure.ac:20: -1- AH_OUTPUT([WORDS_BIGENDIAN], [/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#  undef WORDS_BIGENDIAN
# endif
#endif])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([AC_APPLE_UNIVERSAL_BUILD])
m4trace:configure.ac:20: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:20: -1- AH_OUTPUT([AC_APPLE_UNIVERSAL_BUILD], [/* Define if building universal (internal helper macro) */
@%:@undef AC_APPLE_UNIVERSAL_BUILD])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([DBL_EXPBIT0_WORD])
m4trace:configure.ac:20: -1- m4_pattern_allow([^DBL_EXPBIT0_WORD$])
m4trace:configure.ac:20: -1- AH_OUTPUT([DBL_EXPBIT0_WORD], [/* Define as the word index where to find the exponent of \'double\'. */
@%:@undef DBL_EXPBIT0_WORD])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([DBL_EXPBIT0_BIT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^DBL_EXPBIT0_BIT$])
m4trace:configure.ac:20: -1- AH_OUTPUT([DBL_EXPBIT0_BIT], [/* Define as the bit index in the word where to find bit 0 of the exponent of
   \'double\'. */
@%:@undef DBL_EXPBIT0_BIT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_SNPRINTF], [/* Define to 1 if you have the `snprintf\' function. */
@%:@undef HAVE_SNPRINTF])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_SNPRINTF_RETVAL_C99])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_SNPRINTF_RETVAL_C99$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_SNPRINTF_RETVAL_C99], [/* Define if the return value of the snprintf function is the number of of
   bytes (excluding the terminating NUL) that would have been produced if the
   buffer had been large enough. */
@%:@undef HAVE_SNPRINTF_RETVAL_C99])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_VASPRINTF], [/* Define to 1 if you have the `vasprintf\' function. */
@%:@undef HAVE_VASPRINTF])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_VASPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_VASPRINTF$])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([GNULIB_TEST_VASPRINTF])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_TEST_VASPRINTF$])
m4trace:configure.ac:20: -1- AH_OUTPUT([GNULIB_TEST_VASPRINTF], [/* Define to 1 when the gnulib module vasprintf should be tested. */
@%:@undef GNULIB_TEST_VASPRINTF])
m4trace:configure.ac:20: -1- AM_XGETTEXT_OPTION([--flag=asprintf:2:c-format])
m4trace:configure.ac:20: -1- AM_XGETTEXT_OPTION([--flag=vasprintf:2:c-format])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_BTOWC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_BTOWC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_BTOWC$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCTOB])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCTOB])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCTOB$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSINIT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSINIT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSINIT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBRTOWC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBRTOWC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBRTOWC$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBRLEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBRLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBRLEN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSRTOWCS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSRTOWCS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSRTOWCS$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_MBSNRTOWCS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_MBSNRTOWCS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_MBSNRTOWCS$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCRTOMB])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCRTOMB])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCRTOMB$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSRTOMBS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSRTOMBS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSRTOMBS$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSNRTOMBS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSNRTOMBS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSNRTOMBS$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCWIDTH])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCWIDTH])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCWIDTH$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WMEMCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WMEMCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WMEMCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WMEMCMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WMEMCMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WMEMCMP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WMEMCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WMEMCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WMEMCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WMEMMOVE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WMEMMOVE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WMEMMOVE$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WMEMSET])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WMEMSET])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WMEMSET$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSLEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSLEN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSNLEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSNLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSNLEN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCPCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCPCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCPCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSNCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSNCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSNCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCPNCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCPNCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCPNCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSCAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSCAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSCAT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSNCAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSNCAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSNCAT$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSCMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSCMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSCMP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSNCMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSNCMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSNCMP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSCASECMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSCASECMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSCASECMP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSNCASECMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSNCASECMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSNCASECMP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSCOLL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSCOLL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSCOLL$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSXFRM])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSXFRM])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSXFRM$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSDUP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSDUP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSDUP$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSRCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSRCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSRCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSCSPN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSCSPN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSCSPN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSSPN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSSPN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSSPN$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSPBRK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSPBRK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSPBRK$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSSTR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSSTR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSSTR$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSTOK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSTOK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSTOK$])
m4trace:configure.ac:20: -1- AC_SUBST([GNULIB_WCSWIDTH])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([GNULIB_WCSWIDTH])
m4trace:configure.ac:20: -1- m4_pattern_allow([^GNULIB_WCSWIDTH$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_BTOWC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_BTOWC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_BTOWC$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MBSINIT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MBSINIT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MBSINIT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MBRTOWC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MBRTOWC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MBRTOWC$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MBRLEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MBRLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MBRLEN$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MBSRTOWCS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MBSRTOWCS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MBSRTOWCS$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_MBSNRTOWCS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_MBSNRTOWCS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_MBSNRTOWCS$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCRTOMB])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCRTOMB])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCRTOMB$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSRTOMBS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSRTOMBS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSRTOMBS$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSNRTOMBS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSNRTOMBS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSNRTOMBS$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WMEMCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WMEMCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WMEMCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WMEMCMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WMEMCMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WMEMCMP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WMEMCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WMEMCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WMEMCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WMEMMOVE])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WMEMMOVE])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WMEMMOVE$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WMEMSET])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WMEMSET])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WMEMSET$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSLEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSLEN$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSNLEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSNLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSNLEN$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCPCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCPCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCPCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSNCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSNCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSNCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCPNCPY])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCPNCPY])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCPNCPY$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSCAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSCAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSCAT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSNCAT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSNCAT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSNCAT$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSCMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSCMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSCMP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSNCMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSNCMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSNCMP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSCASECMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSCASECMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSCASECMP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSNCASECMP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSNCASECMP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSNCASECMP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSCOLL])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSCOLL])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSCOLL$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSXFRM])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSXFRM])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSXFRM$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSDUP])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSDUP])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSDUP$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSRCHR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSRCHR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSRCHR$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSCSPN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSCSPN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSCSPN$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSSPN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSSPN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSSPN$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSPBRK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSPBRK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSPBRK$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSSTR])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSSTR])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSSTR$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSTOK])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSTOK])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSTOK$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCSWIDTH])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCSWIDTH])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCSWIDTH$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_WCTOB])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_WCTOB])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_WCTOB$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_DECL_WCWIDTH])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_DECL_WCWIDTH])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_DECL_WCWIDTH$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_MBSTATE_T])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_MBSTATE_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_MBSTATE_T$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_BTOWC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_BTOWC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_BTOWC$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_WCTOB])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_WCTOB])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_WCTOB$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_MBSINIT])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_MBSINIT])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_MBSINIT$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_MBRTOWC])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_MBRTOWC])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_MBRTOWC$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_MBRLEN])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_MBRLEN])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_MBRLEN$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_MBSRTOWCS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_MBSRTOWCS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_MBSRTOWCS$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_MBSNRTOWCS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_MBSNRTOWCS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_MBSNRTOWCS$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_WCRTOMB])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_WCRTOMB])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_WCRTOMB$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_WCSRTOMBS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_WCSRTOMBS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_WCSRTOMBS$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_WCSNRTOMBS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_WCSNRTOMBS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_WCSNRTOMBS$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_WCWIDTH])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_WCWIDTH])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_WCWIDTH$])
m4trace:configure.ac:20: -1- AC_SUBST([REPLACE_WCSWIDTH])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([REPLACE_WCSWIDTH])
m4trace:configure.ac:20: -1- m4_pattern_allow([^REPLACE_WCSWIDTH$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_WCHAR_H], [/* Define to 1 if you have the <wchar.h> header file. */
@%:@undef HAVE_WCHAR_H])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_WCHAR_H], [AS_VAR_GET(gl_next_header)])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_WCHAR_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_WCHAR_H$])
m4trace:configure.ac:20: -1- AC_SUBST([NEXT_AS_FIRST_DIRECTIVE_WCHAR_H], [$gl_next_as_first_directive])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([NEXT_AS_FIRST_DIRECTIVE_WCHAR_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_WCHAR_H$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WCHAR_H])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WCHAR_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:configure.ac:20: -1- AC_SUBST([HAVE_WINT_T])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([HAVE_WINT_T])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_WINT_T$])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_BTOWC], [/* Define to 1 if btowc is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_BTOWC])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCTOB], [/* Define to 1 if wctob is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCTOB])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_MBSINIT], [/* Define to 1 if mbsinit is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_MBSINIT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_MBRTOWC], [/* Define to 1 if mbrtowc is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_MBRTOWC])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_MBRLEN], [/* Define to 1 if mbrlen is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_MBRLEN])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_MBSRTOWCS], [/* Define to 1 if mbsrtowcs is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_MBSRTOWCS])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_MBSNRTOWCS], [/* Define to 1 if mbsnrtowcs is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_MBSNRTOWCS])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCRTOMB], [/* Define to 1 if wcrtomb is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCRTOMB])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSRTOMBS], [/* Define to 1 if wcsrtombs is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSRTOMBS])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSNRTOMBS], [/* Define to 1 if wcsnrtombs is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSNRTOMBS])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCWIDTH], [/* Define to 1 if wcwidth is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCWIDTH])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WMEMCHR], [/* Define to 1 if wmemchr is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WMEMCHR])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WMEMCMP], [/* Define to 1 if wmemcmp is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WMEMCMP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WMEMCPY], [/* Define to 1 if wmemcpy is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WMEMCPY])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WMEMMOVE], [/* Define to 1 if wmemmove is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WMEMMOVE])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WMEMSET], [/* Define to 1 if wmemset is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WMEMSET])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSLEN], [/* Define to 1 if wcslen is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSLEN])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSNLEN], [/* Define to 1 if wcsnlen is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSNLEN])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSCPY], [/* Define to 1 if wcscpy is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSCPY])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCPCPY], [/* Define to 1 if wcpcpy is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCPCPY])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSNCPY], [/* Define to 1 if wcsncpy is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSNCPY])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCPNCPY], [/* Define to 1 if wcpncpy is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCPNCPY])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSCAT], [/* Define to 1 if wcscat is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSCAT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSNCAT], [/* Define to 1 if wcsncat is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSNCAT])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSCMP], [/* Define to 1 if wcscmp is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSCMP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSNCMP], [/* Define to 1 if wcsncmp is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSNCMP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSCASECMP], [/* Define to 1 if wcscasecmp is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSCASECMP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSNCASECMP], [/* Define to 1 if wcsncasecmp is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSNCASECMP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSCOLL], [/* Define to 1 if wcscoll is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSCOLL])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSXFRM], [/* Define to 1 if wcsxfrm is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSXFRM])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSDUP], [/* Define to 1 if wcsdup is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSDUP])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSCHR], [/* Define to 1 if wcschr is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSCHR])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSRCHR], [/* Define to 1 if wcsrchr is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSRCHR])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSCSPN], [/* Define to 1 if wcscspn is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSCSPN])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSSPN], [/* Define to 1 if wcsspn is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSSPN])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSPBRK], [/* Define to 1 if wcspbrk is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSPBRK])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSSTR], [/* Define to 1 if wcsstr is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSSTR])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSTOK], [/* Define to 1 if wcstok is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSTOK])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_RAW_DECL_WCSWIDTH], [/* Define to 1 if wcswidth is declared even after undefining macros. */
@%:@undef HAVE_RAW_DECL_WCSWIDTH])
m4trace:configure.ac:20: -1- AH_OUTPUT([HAVE_STDINT_H], [/* Define to 1 if you have the <stdint.h> header file. */
@%:@undef HAVE_STDINT_H])
m4trace:configure.ac:20: -1- AC_DEFINE_TRACE_LITERAL([HAVE_STDINT_H])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:20: -1- AM_XGETTEXT_OPTION([--flag=xasprintf:1:c-format])
m4trace:configure.ac:20: -1- AC_SUBST([gltests_WITNESS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([gltests_WITNESS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^gltests_WITNESS$])
m4trace:configure.ac:20: -1- AC_SUBST([LIBGNU_LIBDEPS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([LIBGNU_LIBDEPS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^LIBGNU_LIBDEPS$])
m4trace:configure.ac:20: -1- AC_SUBST([LIBGNU_LTLIBDEPS])
m4trace:configure.ac:20: -1- AC_SUBST_TRACE([LIBGNU_LTLIBDEPS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^LIBGNU_LTLIBDEPS$])
m4trace:configure.ac:21: -1- AC_DEFINE_TRACE_LITERAL([HAVE_ALLOCA_H])
m4trace:configure.ac:21: -1- m4_pattern_allow([^HAVE_ALLOCA_H$])
m4trace:configure.ac:21: -1- AH_OUTPUT([HAVE_ALLOCA_H], [/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).
   */
@%:@undef HAVE_ALLOCA_H])
m4trace:configure.ac:21: -1- AC_DEFINE_TRACE_LITERAL([HAVE_ALLOCA])
m4trace:configure.ac:21: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:21: -1- AH_OUTPUT([HAVE_ALLOCA], [/* Define to 1 if you have `alloca\', as a function or macro. */
@%:@undef HAVE_ALLOCA])
m4trace:configure.ac:21: -1- AC_LIBSOURCE([alloca.c])
m4trace:configure.ac:21: -1- AC_SUBST([ALLOCA], [\${LIBOBJDIR}alloca.$ac_objext])
m4trace:configure.ac:21: -1- AC_SUBST_TRACE([ALLOCA])
m4trace:configure.ac:21: -1- m4_pattern_allow([^ALLOCA$])
m4trace:configure.ac:21: -1- AC_DEFINE_TRACE_LITERAL([C_ALLOCA])
m4trace:configure.ac:21: -1- m4_pattern_allow([^C_ALLOCA$])
m4trace:configure.ac:21: -1- AH_OUTPUT([C_ALLOCA], [/* Define to 1 if using `alloca.c\'. */
@%:@undef C_ALLOCA])
m4trace:configure.ac:21: -1- AC_DEFINE_TRACE_LITERAL([CRAY_STACKSEG_END])
m4trace:configure.ac:21: -1- m4_pattern_allow([^CRAY_STACKSEG_END$])
m4trace:configure.ac:21: -1- AH_OUTPUT([CRAY_STACKSEG_END], [/* Define to one of `_getb67\', `GETB67\', `getb67\' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c\' support on those systems.
   */
@%:@undef CRAY_STACKSEG_END])
m4trace:configure.ac:21: -1- AH_OUTPUT([STACK_DIRECTION], [/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at runtime.
	STACK_DIRECTION > 0 => grows toward higher addresses
	STACK_DIRECTION < 0 => grows toward lower addresses
	STACK_DIRECTION = 0 => direction of growth unknown */
@%:@undef STACK_DIRECTION])
m4trace:configure.ac:21: -1- AC_DEFINE_TRACE_LITERAL([STACK_DIRECTION])
m4trace:configure.ac:21: -1- m4_pattern_allow([^STACK_DIRECTION$])
m4trace:configure.ac:22: -1- AH_OUTPUT([HAVE_INTTYPES_H], [/* Define to 1 if you have the <inttypes.h> header file. */
@%:@undef HAVE_INTTYPES_H])
m4trace:configure.ac:22: -1- AH_OUTPUT([HAVE_LIBINTL_H], [/* Define to 1 if you have the <libintl.h> header file. */
@%:@undef HAVE_LIBINTL_H])
m4trace:configure.ac:22: -1- AH_OUTPUT([HAVE_MALLOC_H], [/* Define to 1 if you have the <malloc.h> header file. */
@%:@undef HAVE_MALLOC_H])
m4trace:configure.ac:22: -1- AH_OUTPUT([HAVE_STDDEF_H], [/* Define to 1 if you have the <stddef.h> header file. */
@%:@undef HAVE_STDDEF_H])
m4trace:configure.ac:22: -1- AH_OUTPUT([HAVE_STDINT_H], [/* Define to 1 if you have the <stdint.h> header file. */
@%:@undef HAVE_STDINT_H])
m4trace:configure.ac:22: -1- AH_OUTPUT([HAVE_STDLIB_H], [/* Define to 1 if you have the <stdlib.h> header file. */
@%:@undef HAVE_STDLIB_H])
m4trace:configure.ac:22: -1- AH_OUTPUT([HAVE_STRING_H], [/* Define to 1 if you have the <string.h> header file. */
@%:@undef HAVE_STRING_H])
m4trace:configure.ac:22: -1- AH_OUTPUT([HAVE_UNISTD_H], [/* Define to 1 if you have the <unistd.h> header file. */
@%:@undef HAVE_UNISTD_H])
m4trace:configure.ac:25: -1- AC_DEFINE_TRACE_LITERAL([HAVE__BOOL])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE__BOOL$])
m4trace:configure.ac:25: -1- AH_OUTPUT([HAVE__BOOL], [/* Define to 1 if the system has the type `_Bool\'. */
@%:@undef HAVE__BOOL])
m4trace:configure.ac:26: -1- AH_OUTPUT([inline], [/* Define to `__inline__\' or `__inline\' if that\'s what the C compiler
   calls it, or to nothing if \'inline\' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif])
m4trace:configure.ac:27: -1- AC_DEFINE_TRACE_LITERAL([int16_t])
m4trace:configure.ac:27: -1- m4_pattern_allow([^int16_t$])
m4trace:configure.ac:27: -1- AH_OUTPUT([int16_t], [/* Define to the type of a signed integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
@%:@undef int16_t])
m4trace:configure.ac:28: -1- AC_DEFINE_TRACE_LITERAL([int32_t])
m4trace:configure.ac:28: -1- m4_pattern_allow([^int32_t$])
m4trace:configure.ac:28: -1- AH_OUTPUT([int32_t], [/* Define to the type of a signed integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
@%:@undef int32_t])
m4trace:configure.ac:29: -1- AC_DEFINE_TRACE_LITERAL([int64_t])
m4trace:configure.ac:29: -1- m4_pattern_allow([^int64_t$])
m4trace:configure.ac:29: -1- AH_OUTPUT([int64_t], [/* Define to the type of a signed integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
@%:@undef int64_t])
m4trace:configure.ac:30: -1- AC_DEFINE_TRACE_LITERAL([int8_t])
m4trace:configure.ac:30: -1- m4_pattern_allow([^int8_t$])
m4trace:configure.ac:30: -1- AH_OUTPUT([int8_t], [/* Define to the type of a signed integer type of width exactly 8 bits if such
   a type exists and the standard includes do not define it. */
@%:@undef int8_t])
m4trace:configure.ac:31: -1- AC_DEFINE_TRACE_LITERAL([size_t])
m4trace:configure.ac:31: -1- m4_pattern_allow([^size_t$])
m4trace:configure.ac:31: -1- AH_OUTPUT([size_t], [/* Define to `unsigned int\' if <sys/types.h> does not define. */
@%:@undef size_t])
m4trace:configure.ac:32: -1- AC_DEFINE_TRACE_LITERAL([uint16_t])
m4trace:configure.ac:32: -1- m4_pattern_allow([^uint16_t$])
m4trace:configure.ac:32: -1- AH_OUTPUT([uint16_t], [/* Define to the type of an unsigned integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
@%:@undef uint16_t])
m4trace:configure.ac:33: -1- AC_DEFINE_TRACE_LITERAL([_UINT32_T])
m4trace:configure.ac:33: -1- m4_pattern_allow([^_UINT32_T$])
m4trace:configure.ac:33: -1- AH_OUTPUT([_UINT32_T], [/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   @%:@define below would cause a syntax error. */
@%:@undef _UINT32_T])
m4trace:configure.ac:33: -1- AC_DEFINE_TRACE_LITERAL([uint32_t])
m4trace:configure.ac:33: -1- m4_pattern_allow([^uint32_t$])
m4trace:configure.ac:33: -1- AH_OUTPUT([uint32_t], [/* Define to the type of an unsigned integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
@%:@undef uint32_t])
m4trace:configure.ac:34: -1- AC_DEFINE_TRACE_LITERAL([_UINT8_T])
m4trace:configure.ac:34: -1- m4_pattern_allow([^_UINT8_T$])
m4trace:configure.ac:34: -1- AH_OUTPUT([_UINT8_T], [/* Define for Solaris 2.5.1 so the uint8_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   @%:@define below would cause a syntax error. */
@%:@undef _UINT8_T])
m4trace:configure.ac:34: -1- AC_DEFINE_TRACE_LITERAL([uint8_t])
m4trace:configure.ac:34: -1- m4_pattern_allow([^uint8_t$])
m4trace:configure.ac:34: -1- AH_OUTPUT([uint8_t], [/* Define to the type of an unsigned integer type of width exactly 8 bits if
   such a type exists and the standard includes do not define it. */
@%:@undef uint8_t])
m4trace:configure.ac:37: -1- AC_LIBSOURCE([error.h])
m4trace:configure.ac:37: -1- AC_LIBSOURCE([error.c])
m4trace:configure.ac:37: -1- AC_SUBST([LIB@&t@OBJS], ["$LIB@&t@OBJS error.$ac_objext"])
m4trace:configure.ac:37: -1- AC_SUBST_TRACE([LIB@&t@OBJS])
m4trace:configure.ac:37: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:37: -1- AC_LIBSOURCE([error.c])
m4trace:configure.ac:38: -1- AH_OUTPUT([HAVE_STDLIB_H], [/* Define to 1 if you have the <stdlib.h> header file. */
@%:@undef HAVE_STDLIB_H])
m4trace:configure.ac:38: -1- AC_DEFINE_TRACE_LITERAL([HAVE_STDLIB_H])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STDLIB_H$])
m4trace:configure.ac:38: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MALLOC])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MALLOC$])
m4trace:configure.ac:38: -1- AH_OUTPUT([HAVE_MALLOC], [/* Define to 1 if your system has a GNU libc compatible `malloc\' function, and
   to 0 otherwise. */
@%:@undef HAVE_MALLOC])
m4trace:configure.ac:38: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MALLOC])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MALLOC$])
m4trace:configure.ac:38: -1- AC_SUBST([LIB@&t@OBJS], ["$LIB@&t@OBJS malloc.$ac_objext"])
m4trace:configure.ac:38: -1- AC_SUBST_TRACE([LIB@&t@OBJS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:38: -1- AC_LIBSOURCE([malloc.c])
m4trace:configure.ac:38: -1- AC_DEFINE_TRACE_LITERAL([malloc])
m4trace:configure.ac:38: -1- m4_pattern_allow([^malloc$])
m4trace:configure.ac:38: -1- AH_OUTPUT([malloc], [/* Define to rpl_malloc if the replacement function should be used. */
@%:@undef malloc])
m4trace:configure.ac:39: -1- AH_OUTPUT([HAVE_STDLIB_H], [/* Define to 1 if you have the <stdlib.h> header file. */
@%:@undef HAVE_STDLIB_H])
m4trace:configure.ac:39: -1- AC_DEFINE_TRACE_LITERAL([HAVE_STDLIB_H])
m4trace:configure.ac:39: -1- m4_pattern_allow([^HAVE_STDLIB_H$])
m4trace:configure.ac:39: -1- AC_DEFINE_TRACE_LITERAL([HAVE_REALLOC])
m4trace:configure.ac:39: -1- m4_pattern_allow([^HAVE_REALLOC$])
m4trace:configure.ac:39: -1- AH_OUTPUT([HAVE_REALLOC], [/* Define to 1 if your system has a GNU libc compatible `realloc\' function,
   and to 0 otherwise. */
@%:@undef HAVE_REALLOC])
m4trace:configure.ac:39: -1- AC_DEFINE_TRACE_LITERAL([HAVE_REALLOC])
m4trace:configure.ac:39: -1- m4_pattern_allow([^HAVE_REALLOC$])
m4trace:configure.ac:39: -1- AC_SUBST([LIB@&t@OBJS], ["$LIB@&t@OBJS realloc.$ac_objext"])
m4trace:configure.ac:39: -1- AC_SUBST_TRACE([LIB@&t@OBJS])
m4trace:configure.ac:39: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:39: -1- AC_LIBSOURCE([realloc.c])
m4trace:configure.ac:39: -1- AC_DEFINE_TRACE_LITERAL([realloc])
m4trace:configure.ac:39: -1- m4_pattern_allow([^realloc$])
m4trace:configure.ac:39: -1- AH_OUTPUT([realloc], [/* Define to rpl_realloc if the replacement function should be used. */
@%:@undef realloc])
m4trace:configure.ac:40: -1- AC_SUBST([POW_LIB])
m4trace:configure.ac:40: -1- AC_SUBST_TRACE([POW_LIB])
m4trace:configure.ac:40: -1- m4_pattern_allow([^POW_LIB$])
m4trace:configure.ac:40: -1- AC_SUBST([LIB@&t@OBJS], ["$LIB@&t@OBJS strtod.$ac_objext"])
m4trace:configure.ac:40: -1- AC_SUBST_TRACE([LIB@&t@OBJS])
m4trace:configure.ac:40: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:40: -1- AC_LIBSOURCE([strtod.c])
m4trace:configure.ac:41: -1- AH_OUTPUT([HAVE_MEMSET], [/* Define to 1 if you have the `memset\' function. */
@%:@undef HAVE_MEMSET])
m4trace:configure.ac:41: -1- AH_OUTPUT([HAVE_STRERROR], [/* Define to 1 if you have the `strerror\' function. */
@%:@undef HAVE_STRERROR])
m4trace:configure.ac:41: -1- AH_OUTPUT([HAVE_STRNDUP], [/* Define to 1 if you have the `strndup\' function. */
@%:@undef HAVE_STRNDUP])
m4trace:configure.ac:41: -1- AH_OUTPUT([HAVE_STRTOL], [/* Define to 1 if you have the `strtol\' function. */
@%:@undef HAVE_STRTOL])
m4trace:configure.ac:43: -1- AC_CONFIG_FILES([Makefile gnulib/Makefile dt101/Makefile src/Makefile man/Makefile tests/Makefile])
m4trace:configure.ac:44: -1- AC_SUBST([LIB@&t@OBJS], [$ac_libobjs])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([LIB@&t@OBJS])
m4trace:configure.ac:44: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:44: -1- AC_SUBST([LTLIBOBJS], [$ac_ltlibobjs])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([LTLIBOBJS])
m4trace:configure.ac:44: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:44: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:44: -1- AC_SUBST([am__EXEEXT_TRUE])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([am__EXEEXT_TRUE])
m4trace:configure.ac:44: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:44: -1- AC_SUBST([am__EXEEXT_FALSE])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([am__EXEEXT_FALSE])
m4trace:configure.ac:44: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:44: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:44: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:44: -1- AC_SUBST([gl_LIBOBJS], [$gl_libobjs])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([gl_LIBOBJS])
m4trace:configure.ac:44: -1- m4_pattern_allow([^gl_LIBOBJS$])
m4trace:configure.ac:44: -1- AC_SUBST([gl_LTLIBOBJS], [$gl_ltlibobjs])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([gl_LTLIBOBJS])
m4trace:configure.ac:44: -1- m4_pattern_allow([^gl_LTLIBOBJS$])
m4trace:configure.ac:44: -1- AC_SUBST([gltests_LIBOBJS], [$gltests_libobjs])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([gltests_LIBOBJS])
m4trace:configure.ac:44: -1- m4_pattern_allow([^gltests_LIBOBJS$])
m4trace:configure.ac:44: -1- AC_SUBST([gltests_LTLIBOBJS], [$gltests_ltlibobjs])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([gltests_LTLIBOBJS])
m4trace:configure.ac:44: -1- m4_pattern_allow([^gltests_LTLIBOBJS$])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([top_builddir])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([top_build_prefix])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([srcdir])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([abs_srcdir])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([top_srcdir])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([abs_top_srcdir])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([builddir])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([abs_builddir])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([abs_top_builddir])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([INSTALL])
m4trace:configure.ac:44: -1- AC_SUBST_TRACE([MKDIR_P])
