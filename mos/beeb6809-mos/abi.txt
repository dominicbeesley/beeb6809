

Memory map (bottom 64k)

		+-------------+-----------------+---------------------------------------------+
		| 0000 - 00FF | 68008 vectors		| This can't really go anywhere else without  |
		|							|									| a lot of faffing                            |
		+-------------+-----------------+---------------------------------------------+
		| 0100 - 01FF | Direct page     | Moved here to make room for vectors         |
		+-------------+-----------------+---------------------------------------------+
    | 0200 - 0235 | ---             | Vacated by vectors moved to                 |
    +-------------+-----------------+---------------------------------------------+
    | 0235 - 02FF | System vars     | Some 16 bit values endian swapped see below |
    +-------------+-----------------+---------------------------------------------+
    | 0300 - 037F | VDU vars        | Some 16 bit values endian swapped see below |
    +-------------+-----------------+---------------------------------------------+
    | 0380 - 03DF | reserved        |                                             |
    +-------------+-----------------+---------------------------------------------+
    | 03E0 - 03FF | Keyboard buffer |                                             |
    +-------------+-----------------+---------------------------------------------+
    | 0400 - 04FF | OS vectors      | Not all of this page is used but all is     |
    |             |                 | reserved and set to 0 at boot               |
    +-------------+-----------------+---------------------------------------------+
    | 0800 - 0FFF | Supervisor stack| This may be reduced at some point           |
    +-------------+-----------------+---------------------------------------------+
    |             |                 |                                             |
    +-------------+-----------------+---------------------------------------------+


System variable changes:
------------------------

Following are all 16bit BE and must be in FFFFxxxx:
 - sysvar_OSVARADDR      := $0236  ; fx166/7 &A6/7 Address of OS variables
 - sysvar_ROMPTRTAB      := $0238  ; fx168/9 &A8/9 Address of ROM pointer table
 - sysvar_ROMINFOTAB     := $023A  ; fx170/1 &AA/B Address of ROM info table
 - sysvar_KEYB_ADDRTRANS     := $023C  ; fx172/3 &AC/D Address of key translation table
 - sysvar_ADDRVDUVARS      := $023E  ; fx174/5 &AE/F Address of VDU variables



trap #0 is BRK followed by LONG containing error number then string
trap #1 is for OS SWIS 0..$7FFF $8000 flags X version of swi WORD after trap is swi#
trap #2 is for other SWIs $00008000+ flags for X in top bit LONG after trap is swi#, 
trap #3
trap #4
trap #5
trap #6
trap #7
trap #8
trap #9
trap #10
trap #11
trap #12
trap #13
trap #14
trap #15 is noice breakpoint 


trap #9 is "TODO" trap should be followed by string message

MOS internal register usage practice

D0-D2,A0-A2 are parameters to routines and may be updated / destroyed, other registers should be preserved

OSBYTE
	A => D0
	X => D1
	Y => D2



PROBLEMS:
---------

mos_set_cursor_X - change API to use D0 instead of A0?

DISASS 
- show previous / don't reload if already in range, show pointer
- D0/A6 comes out as D0A6 in movem

